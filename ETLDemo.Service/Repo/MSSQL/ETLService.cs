using CsvHelper.Configuration;
using CsvHelper;
using ETL_Demo.Models;
using System.Globalization;
using System.Formats.Asn1;
using Common.DataAccess.MsSql;
using Common.Config;
using System.Data;
using Serilog;
using Microsoft.Data.SqlClient;
using Common.Security;
using Microsoft.Extensions.Options;
using ETL.Service.Repo.Interface;
using ETL.Service.Model;
using Newtonsoft.Json;
using Npgsql;
using NpgsqlTypes;
using Polly;

namespace ETL.Service.Repo.MSSQL
{
    public class ETLService : IETLService
    {
        public QueryHelper _queryHelper = null;
        public string conectionstring = null;
        public ETLService(DbConfig dbConfig, ETLAppSettings appsettings)
        {
            //_queryHelper = new QueryHelper(databaseConfig.ConnectionString);
            var initialConnectionString = ConnectionStringManager.IsConnectionStringCached()
                                    ? ConnectionStringManager.GetConnectionString()
                                    : dbConfig.ConnectionString;
            conectionstring = initialConnectionString;
            _queryHelper = new QueryHelper(initialConnectionString);
        }
        #region InvoiceData
        async Task<InvoiceData> IETLService.InsertInvoiceData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertInvoiceData service called.");
                Console.WriteLine("InsertInvoiceData service called.");
                const string sql = @"INSERT [dbo].[S_InvoiceData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [billerId] ,
                        [ValidationDate] ,
                        [ValidityHours] ,
                        [InvoiceDocumentReference] ,
                        [QRCode] ,
                        [IRBMValidationDate] ,
                        [ValidityEndDateTime] ,
                        [IRBMValidationTime] ,
                        [RemainingHours] ,
                        [SourceFileName] ,
                        [SourceName] ,
                        [FıleName] ,
                        [DataTıme] ,
                        [FolderName],
                        [InvoıceCreatorName] ,
                        [SourceInvoıceNumber] ,
                        [InvoıceNumberStatus] ,
                        [ProcessType] ,
                        [WorkflowType] ,
                        [SchedulerName] ,
                        [TaskID] ,
                        [CreationDateTıme] ,
                        [CreatorID] ,
                        [CreationNotes] ,
                        [CreationSubmissionDateTime] ,
                        [CreationApprovalDateTıme] ,
                        [CreationApprovalID] ,
                        [CreationApprovalNotes] ,
                        [CreationApprovalStatus] ,
                        [VerifıcationApprovalDateTıme] ,
                        [CreationApproverlID] ,
                        [VerificationApprovalID] ,
                        [VerificationApproverlID] ,
                        [VerificationApprovalNotes] ,
                        [GenerationApprovalID] ,
                        [GenerationApproverlID] ,
                        [GenerationApprovalNotes] ,
                        [GenerationApprovalStatus] ,
                        [GenerationApprovalDateTıme] ,
                        [ValidationApprovalID] ,
                        [ValidationApproverlID] ,
                        [ValidationApprovalNotes] ,
                        [ValidationApprovalStatus] ,
                        [ValidationApprovalDateTıme] ,
                        [SubmissionDateTıme] ,
                        [SubmitterID] ,
                        [SubmissionNotes] ,
                        [SubmissionApprovalDateTıme] ,
                        [SubmissionApprovalSubmıtDateTıme] ,
                        [SubmissionApprovalID] ,
                        [SubmissionApprovalNotes] ,
                        [SubmissionApprovalStatus] ,
                        [RetryCount] ,
                        [ValidityEndDateTıme] ,
                        [ValidityStatus] ,
                        [RejectionDateTıme] ,
                        [RejectionReasons] ,
                        [RejectionWFCheckerID] ,
                        [RejectionWFCheckerStatus] ,
                        [RejectionWFCheckerSubmitDateTıme] ,
                        [RejectionWFApproverID] ,
                        [RejectionWFApprovalStatus] ,
                        [RejectionWFApprovalNotes] ,
                        [RejectionWFApprovalSubmitDateTıme] ,
                        [CancellationDateTıme] ,
                        [CancellationReasons] ,
                        [CancellationWFCheckerID] ,
                        [CancellationWFCheckerStatus] ,
                        [CancellationWFCheckerSubmıtDateTıme] ,
                        [CancellationWFApproverID] ,
                        [CancellationWFApprovalStatus] ,
                        [CancellationWFApprovalNotes] ,
                        [CancellationWFApprovalSubmıtDateTıme] ,
                        [ETLJobName] ,
                        [cbcPricingCurrencyCode] ,
                        [cbcCurrencyExchangeRate] ,
                        [cbcFrequencyofBilling] ,
                        [cbcBillingPeriodStartDate] ,
                        [cbcBillingPeriodEndDate] ,
                        [PaymentMode] ,
                        [cbcSupplierBankAccountNumber] ,
                        [cbcBillReferenceNumber] ,
                        [SourceCalculationMode] ,
                        [EtlCalculationMode] ,
                        [İnvoiceFactorycalcutionMode] ,
                        [cbcTaxRate] ,
                        [cbcTaxCategory] ,
                        [validationlink] ,
                        [CustomsForm19ID] ,
                        [CustomsForm19DocumentType] ,
                        [Incoterms] ,
                        [FTADocumentType] ,
                        [FTAID] ,
                        [FTADocumentDesc] ,
                        [schemeAgencyName] ,
                        [CustomsForm2ID] ,
                        [CustomsForm2DocumentType] ,
                        [OtherChargesID] ,
                        [OtherChargesChargeIndicator] ,
                        [OtherChargesAmount] ,
                        [OtherChargesAllowanceChargeReason] ,
                        [NotificationTemplateId] ,
                        [SMSTemplateId] ,
                        [OutputFormat])
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @billerId ,
                        @ValidationDate ,
                        @ValidityHours ,
                        @InvoiceDocumentReference ,
                        @QRCode ,
                        @IRBMValidationDate ,
                        @ValidityEndDateTime ,
                        @IRBMValidationTime ,
                        @RemainingHours ,
                        @SourceFileName ,
                        @SourceName ,
                        @FıleName ,
                        @DataTıme ,
                        @FolderName,
                        @InvoıceCreatorName ,
                        @SourceInvoıceNumber ,
                        @InvoıceNumberStatus ,
                        @ProcessType ,
                        @WorkflowType ,
                        @SchedulerName ,
                        @TaskID ,
                        @CreationDateTıme ,
                        @CreatorID ,
                        @CreationNotes ,
                        @CreationSubmissionDateTime ,
                        @CreationApprovalDateTıme ,
                        @CreationApprovalID ,
                        @CreationApprovalNotes ,
                        @CreationApprovalStatus ,
                        @VerifıcationApprovalDateTıme ,
                        @CreationApproverlID ,
                        @VerificationApprovalID ,
                        @VerificationApproverlID ,
                        @VerificationApprovalNotes ,
                        @GenerationApprovalID ,
                        @GenerationApproverlID ,
                        @GenerationApprovalNotes ,
                        @GenerationApprovalStatus ,
                        @GenerationApprovalDateTıme ,
                        @ValidationApprovalID ,
                        @ValidationApproverlID ,
                        @ValidationApprovalNotes ,
                        @ValidationApprovalStatus ,
                        @ValidationApprovalDateTıme ,
                        @SubmissionDateTıme ,
                        @SubmitterID ,
                        @SubmissionNotes ,
                        @SubmissionApprovalDateTıme ,
                        @SubmissionApprovalSubmıtDateTıme ,
                        @SubmissionApprovalID ,
                        @SubmissionApprovalNotes ,
                        @SubmissionApprovalStatus ,
                        @RetryCount ,
                        @ValidityEndDateTıme ,
                        @ValidityStatus ,
                        @RejectionDateTıme ,
                        @RejectionReasons ,
                        @RejectionWFCheckerID ,
                        @RejectionWFCheckerStatus ,
                        @RejectionWFCheckerSubmitDateTıme ,
                        @RejectionWFApproverID ,
                        @RejectionWFApprovalStatus ,
                        @RejectionWFApprovalNotes ,
                        @RejectionWFApprovalSubmitDateTıme ,
                        @CancellationDateTıme ,
                        @CancellationReasons ,
                        @CancellationWFCheckerID ,
                        @CancellationWFCheckerStatus ,
                        @CancellationWFCheckerSubmıtDateTıme ,
                        @CancellationWFApproverID ,
                        @CancellationWFApprovalStatus ,
                        @CancellationWFApprovalNotes ,
                        @CancellationWFApprovalSubmıtDateTıme ,
                        @ETLJobName ,
                        @cbcPricingCurrencyCode ,
                        @cbcCurrencyExchangeRate ,
                        @cbcFrequencyofBilling ,
                        @cbcBillingPeriodStartDate ,
                        @cbcBillingPeriodEndDate ,
                        @PaymentMode ,
                        @cbcSupplierBankAccountNumber ,
                        @cbcBillReferenceNumber ,
                        @SourceCalculationMode ,
                        @EtlCalculationMode ,
                        @İnvoiceFactorycalcutionMode ,
                        @cbcTaxRate ,
                        @cbcTaxCategory ,
                        @validationlink ,
                        @CustomsForm19ID ,
                        @CustomsForm19DocumentType ,
                        @Incoterms ,
                        @FTADocumentType ,
                        @FTAID ,
                        @FTADocumentDesc ,
                        @schemeAgencyName ,
                        @CustomsForm2ID ,
                        @CustomsForm2DocumentType ,
                        @OtherChargesID ,
                        @OtherChargesChargeIndicator ,
                        @OtherChargesAmount ,
                        @OtherChargesAllowanceChargeReason ,
                        @NotificationTemplateId ,
                        @SMSTemplateId ,
                        @OutputFormat)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertInvoiceDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertInvoiceData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertInvoiceData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertInvoiceDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@billerId", field.BillerId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", field.InvoiceDocumentReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@QRCode", field.QRCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMValidationDate", field.IRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTıme", field.ValidityEndDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBMValidationTime", field.IRBMValidationTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RemainingHours", field.RemainingHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceFileName", field.SourceFileName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceName", field.SourceName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FıleName", field.FıleName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@DataTıme", field.DataTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@FolderName", field.FolderName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceCreatorName", field.InvoıceCreatorName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceInvoıceNumber", field.SourceInvoıceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceNumberStatus", field.InvoıceNumberStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ProcessType", field.ProcessType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowType", field.WorkflowType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SchedulerName", field.SchedulerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TaskID", field.TaskID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationDateTıme", field.CreationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatorID", field.CreatorID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationNotes", field.CreationNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationSubmissionDateTime", field.CreationSubmissionDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalDateTıme", field.CreationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CreationApprovalNotes", field.CreationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationApprovalStatus", field.CreationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@VerifıcationApprovalDateTıme", field.VerifıcationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApproverlID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApproverlID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalNotes", field.VerificationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalID", field.GenerationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApproverlID", field.GenerationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApprovalNotes", field.GenerationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalStatus", field.GenerationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalDateTıme", field.GenerationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationApprovalID", field.ValidationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApproverlID", field.ValidationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApprovalNotes", field.ValidationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalStatus", field.ValidationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalDateTıme", field.ValidationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionDateTıme", field.SubmissionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmitterID", field.SubmitterID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionNotes", field.SubmissionNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalDateTıme", field.SubmissionApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalSubmıtDateTıme", field.SubmissionApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalID", field.SubmissionApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalNotes", field.SubmissionApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalStatus", field.SubmissionApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RetryCount", field.RetryCount, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTime", field.ValidityEndDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityStatus", field.ValidityStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionDateTıme", field.RejectionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionReasons", field.RejectionReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerID", field.RejectionWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerStatus", field.RejectionWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerSubmitDateTıme", field.RejectionWFCheckerSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionWFApproverID", field.RejectionWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalStatus", field.RejectionWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalNotes", field.RejectionWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalSubmitDateTıme", field.RejectionWFApprovalSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationDateTıme", field.CancellationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationReasons", field.CancellationReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerID", field.CancellationWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerStatus", field.CancellationWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerSubmıtDateTıme", field.CancellationWFCheckerSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationWFApproverID", field.CancellationWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalStatus", field.CancellationWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalNotes", field.CancellationWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalSubmıtDateTıme", field.CancellationWFApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ETLJobName", field.ETLJobName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPricingCurrencyCode", field.CbcPricingCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCurrencyExchangeRate", field.CbcCurrencyExchangeRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcFrequencyofBilling", field.CbcFrequencyofBilling, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodStartDate", field.CbcBillingPeriodStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodEndDate", field.CbcBillingPeriodEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PaymentMode", field.PaymentMode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSupplierBankAccountNumber", field.CbcSupplierBankAccountNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillReferenceNumber", field.CbcBillReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceCalculationMode", field.SourceCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@EtlCalculationMode", field.EtlCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@İnvoiceFactorycalcutionMode", field.İnvoiceFactorycalcutionMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCategory", field.CbcTaxCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@validationlink", field.ValidationLink, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19ID", field.CustomsForm19ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19DocumentType", field.CustomsForm19DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@Incoterms", field.Incoterms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentType", field.FTADocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTAID", field.FTAID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentDesc", field.FTADocumentDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeAgencyName", field.SchemeAgencyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2ID", field.CustomsForm2ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2DocumentType", field.CustomsForm2DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesID", field.OtherChargesID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesChargeIndicator", field.OtherChargesChargeIndicator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAmount", field.OtherChargesAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAllowanceChargeReason", field.OtherChargesAllowanceChargeReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NotificationTemplateId", field.NotificationTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SMSTemplateId", field.SMSTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@OutputFormat", field.OutputFormat, SqlDbType.NVarChar)
            };
            return parameters;
        }

        async Task<InvoiceLineItems> IETLService.InsertInvoicelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertInvoicelineData service called.");
                Console.WriteLine("InsertInvoicelineData service called.");

                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[S_InvoiceLineItems] (
                        [InvoiceId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [CbcItemClassificationCode],
                        [CbcProductTariffClass],
                        [CbcTaxSchemeID],
                        [CbcTaxSchemeAgencyID],
                        [CbcTaxSchemeAgencyCode],
                        [CbcInvoiceLineNetAmount],
                        [CbcNetAmount],
                        [ProductId],
                        [CbcItemClassificationClass],
                        [CbcProductTariffCode],
                        [CbcSubtotal],
                        [CbcSSTTaxCategory],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @InvoiceId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @CbcItemClassificationCode,
                        @CbcProductTariffClass,
                        @CbcTaxSchemeID,
                        @CbcTaxSchemeAgencyID,
                        @CbcTaxSchemeAgencyCode,
                        @CbcInvoiceLineNetAmount,
                        @CbcNetAmount,
                        @ProductId,
                        @CbcItemClassificationClass,
                        @CbcProductTariffCode,
                        @CbcSubtotal,
                        @CbcSSTTaxCategory,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertInvoiceLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.InvoiceId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.InvoiceId} Invoicenumber");

                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertInvoicelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertInvoicelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertInvoiceLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@InvoiceId", field.InvoiceId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationCode", field.CbcItemClassificationCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffClass", field.CbcProductTariffClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeID", field.CbcTaxSchemeID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyID", field.CbcTaxSchemeAgencyID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcInvoiceLineNetAmount", field.CbcInvoiceLineNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcNetAmount", field.CbcNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@ProductId", field.ProductId, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationClass", field.CbcItemClassificationClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffCode", field.CbcProductTariffCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSubtotal", field.CbcSubtotal, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSSTTaxCategory", field.CbcSSTTaxCategory, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }

        async Task<DocTaxSubTotal> IETLService.InsertDocTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertDocTaxSubTotal service called.");
                Console.WriteLine("InsertDocTaxSubTotal service called.");
                const string sql = @"
                        INSERT INTO [dbo].[S_DocTaxSubTotal] (
                            [InvoiceId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [InvoiceLineItemId],
                            [CategoryTaxSchemeId],
                            [AmountExemptedFromTax],
                            [CbcTaxSchemeAgencyId],
                            [CbcTaxSchemeAgencyCode]
                        ) 
                        VALUES (
                            @InvoiceId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @InvoiceLineItemId,
                            @CategoryTaxSchemeId,
                            @AmountExemptedFromTax,
                            @CbcTaxSchemeAgencyId,
                            @CbcTaxSchemeAgencyCode
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertDocTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"DoctaxSubTotal Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"DocTaxSubTotalInserted of {docTaxSubTotal.InvoiceId} Invoicenumber");

                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertDocTaxSubTotal service. {ex.Message}");
                Console.WriteLine($"Exception in InsertDocTaxSubTotal service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertDocTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@DocumentSubTotalId", field.DocumentSubTotalId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@InvoiceId", field.InvoiceId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceLineItemId", field.InvoiceLineItemId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CategoryTaxSchemeId", field.CategoryTaxSchemeId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@AmountExemptedFromTax", field.AmountExemptedFromTax, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyId", field.CbcTaxSchemeAgencyId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar)
            };
            return parameters;
        }
        #endregion InvoiceData
        #region CreditNoteData
        async Task<InvoiceData> IETLService.InsertCreditNoteData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertCreditNoteData service called.");
                Console.WriteLine("InsertCreditNoteData service called.");
                const string sql = @"INSERT [dbo].[CreditNoteData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [billerId] ,
                        [ValidationDate] ,
                        [ValidityHours] ,
                        [InvoiceDocumentReference] ,
                        [QRCode] ,
                        [IRBMValidationDate] ,
                        [ValidityEndDateTime] ,
                        [IRBMValidationTime] ,
                        [RemainingHours] ,
                        [SourceFileName] ,
                        [SourceName] ,
                        [FıleName] ,
                        [DataTıme] ,
                        [FolderName],
                        [InvoıceCreatorName] ,
                        [SourceInvoıceNumber] ,
                        [InvoıceNumberStatus] ,
                        [ProcessType] ,
                        [WorkflowType] ,
                        [SchedulerName] ,
                        [TaskID] ,
                        [CreationDateTıme] ,
                        [CreatorID] ,
                        [CreationNotes] ,
                        [CreationSubmissionDateTime] ,
                        [CreationApprovalDateTıme] ,
                        [CreationApprovalID] ,
                        [CreationApprovalNotes] ,
                        [CreationApprovalStatus] ,
                        [VerifıcationApprovalDateTıme] ,
                        [CreationApproverlID] ,
                        [VerificationApprovalID] ,
                        [VerificationApproverlID] ,
                        [VerificationApprovalNotes] ,
                        [GenerationApprovalID] ,
                        [GenerationApproverlID] ,
                        [GenerationApprovalNotes] ,
                        [GenerationApprovalStatus] ,
                        [GenerationApprovalDateTıme] ,
                        [ValidationApprovalID] ,
                        [ValidationApproverlID] ,
                        [ValidationApprovalNotes] ,
                        [ValidationApprovalStatus] ,
                        [ValidationApprovalDateTıme] ,
                        [SubmissionDateTıme] ,
                        [SubmitterID] ,
                        [SubmissionNotes] ,
                        [SubmissionApprovalDateTıme] ,
                        [SubmissionApprovalSubmıtDateTıme] ,
                        [SubmissionApprovalID] ,
                        [SubmissionApprovalNotes] ,
                        [SubmissionApprovalStatus] ,
                        [RetryCount] ,
                        [ValidityEndDateTıme] ,
                        [ValidityStatus] ,
                        [RejectionDateTıme] ,
                        [RejectionReasons] ,
                        [RejectionWFCheckerID] ,
                        [RejectionWFCheckerStatus] ,
                        [RejectionWFCheckerSubmitDateTıme] ,
                        [RejectionWFApproverID] ,
                        [RejectionWFApprovalStatus] ,
                        [RejectionWFApprovalNotes] ,
                        [RejectionWFApprovalSubmitDateTıme] ,
                        [CancellationDateTıme] ,
                        [CancellationReasons] ,
                        [CancellationWFCheckerID] ,
                        [CancellationWFCheckerStatus] ,
                        [CancellationWFCheckerSubmıtDateTıme] ,
                        [CancellationWFApproverID] ,
                        [CancellationWFApprovalStatus] ,
                        [CancellationWFApprovalNotes] ,
                        [CancellationWFApprovalSubmıtDateTıme] ,
                        [ETLJobName] ,
                        [cbcPricingCurrencyCode] ,
                        [cbcCurrencyExchangeRate] ,
                        [cbcFrequencyofBilling] ,
                        [cbcBillingPeriodStartDate] ,
                        [cbcBillingPeriodEndDate] ,
                        [PaymentMode] ,
                        [cbcSupplierBankAccountNumber] ,
                        [cbcBillReferenceNumber] ,
                        [SourceCalculationMode] ,
                        [EtlCalculationMode] ,
                        [İnvoiceFactorycalcutionMode] ,
                        [cbcTaxRate] ,
                        [cbcTaxCategory] ,
                        [validationlink] ,
                        [CustomsForm19ID] ,
                        [CustomsForm19DocumentType] ,
                        [Incoterms] ,
                        [FTADocumentType] ,
                        [FTAID] ,
                        [FTADocumentDesc] ,
                        [schemeAgencyName] ,
                        [CustomsForm2ID] ,
                        [CustomsForm2DocumentType] ,
                        [OtherChargesID] ,
                        [OtherChargesChargeIndicator] ,
                        [OtherChargesAmount] ,
                        [OtherChargesAllowanceChargeReason] ,
                        [NotificationTemplateId] ,
                        [SMSTemplateId] ,
                        [OutputFormat],
                        [OriginalInvoiceIRBMUniqueNo],
                        [OriginalInvoiceNumber])
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @billerId ,
                        @ValidationDate ,
                        @ValidityHours ,
                        @InvoiceDocumentReference ,
                        @QRCode ,
                        @IRBMValidationDate ,
                        @ValidityEndDateTime ,
                        @IRBMValidationTime ,
                        @RemainingHours ,
                        @SourceFileName ,
                        @SourceName ,
                        @FıleName ,
                        @DataTıme ,
                        @FolderName,
                        @InvoıceCreatorName ,
                        @SourceInvoıceNumber ,
                        @InvoıceNumberStatus ,
                        @ProcessType ,
                        @WorkflowType ,
                        @SchedulerName ,
                        @TaskID ,
                        @CreationDateTıme ,
                        @CreatorID ,
                        @CreationNotes ,
                        @CreationSubmissionDateTime ,
                        @CreationApprovalDateTıme ,
                        @CreationApprovalID ,
                        @CreationApprovalNotes ,
                        @CreationApprovalStatus ,
                        @VerifıcationApprovalDateTıme ,
                        @CreationApproverlID ,
                        @VerificationApprovalID ,
                        @VerificationApproverlID ,
                        @VerificationApprovalNotes ,
                        @GenerationApprovalID ,
                        @GenerationApproverlID ,
                        @GenerationApprovalNotes ,
                        @GenerationApprovalStatus ,
                        @GenerationApprovalDateTıme ,
                        @ValidationApprovalID ,
                        @ValidationApproverlID ,
                        @ValidationApprovalNotes ,
                        @ValidationApprovalStatus ,
                        @ValidationApprovalDateTıme ,
                        @SubmissionDateTıme ,
                        @SubmitterID ,
                        @SubmissionNotes ,
                        @SubmissionApprovalDateTıme ,
                        @SubmissionApprovalSubmıtDateTıme ,
                        @SubmissionApprovalID ,
                        @SubmissionApprovalNotes ,
                        @SubmissionApprovalStatus ,
                        @RetryCount ,
                        @ValidityEndDateTıme ,
                        @ValidityStatus ,
                        @RejectionDateTıme ,
                        @RejectionReasons ,
                        @RejectionWFCheckerID ,
                        @RejectionWFCheckerStatus ,
                        @RejectionWFCheckerSubmitDateTıme ,
                        @RejectionWFApproverID ,
                        @RejectionWFApprovalStatus ,
                        @RejectionWFApprovalNotes ,
                        @RejectionWFApprovalSubmitDateTıme ,
                        @CancellationDateTıme ,
                        @CancellationReasons ,
                        @CancellationWFCheckerID ,
                        @CancellationWFCheckerStatus ,
                        @CancellationWFCheckerSubmıtDateTıme ,
                        @CancellationWFApproverID ,
                        @CancellationWFApprovalStatus ,
                        @CancellationWFApprovalNotes ,
                        @CancellationWFApprovalSubmıtDateTıme ,
                        @ETLJobName ,
                        @cbcPricingCurrencyCode ,
                        @cbcCurrencyExchangeRate ,
                        @cbcFrequencyofBilling ,
                        @cbcBillingPeriodStartDate ,
                        @cbcBillingPeriodEndDate ,
                        @PaymentMode ,
                        @cbcSupplierBankAccountNumber ,
                        @cbcBillReferenceNumber ,
                        @SourceCalculationMode ,
                        @EtlCalculationMode ,
                        @İnvoiceFactorycalcutionMode ,
                        @cbcTaxRate ,
                        @cbcTaxCategory ,
                        @validationlink ,
                        @CustomsForm19ID ,
                        @CustomsForm19DocumentType ,
                        @Incoterms ,
                        @FTADocumentType ,
                        @FTAID ,
                        @FTADocumentDesc ,
                        @schemeAgencyName ,
                        @CustomsForm2ID ,
                        @CustomsForm2DocumentType ,
                        @OtherChargesID ,
                        @OtherChargesChargeIndicator ,
                        @OtherChargesAmount ,
                        @OtherChargesAllowanceChargeReason ,
                        @NotificationTemplateId ,
                        @SMSTemplateId ,
                        @OutputFormat ,
                        @OriginalInvoiceIRBMUniqueNo ,
                        @OriginalInvoiceNumber)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertCreditNoteDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertCreditNoteData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertCreditNoteData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertCreditNoteDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@billerId", field.BillerId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", field.InvoiceDocumentReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@QRCode", field.QRCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMValidationDate", field.IRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTıme", field.ValidityEndDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBMValidationTime", field.IRBMValidationTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RemainingHours", field.RemainingHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceFileName", field.SourceFileName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceName", field.SourceName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FıleName", field.FıleName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@DataTıme", field.DataTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@FolderName", field.FolderName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceCreatorName", field.InvoıceCreatorName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceInvoıceNumber", field.SourceInvoıceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceNumberStatus", field.InvoıceNumberStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ProcessType", field.ProcessType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowType", field.WorkflowType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SchedulerName", field.SchedulerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TaskID", field.TaskID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationDateTıme", field.CreationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatorID", field.CreatorID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationNotes", field.CreationNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationSubmissionDateTime", field.CreationSubmissionDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalDateTıme", field.CreationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CreationApprovalNotes", field.CreationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationApprovalStatus", field.CreationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@VerifıcationApprovalDateTıme", field.VerifıcationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApproverlID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApproverlID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalNotes", field.VerificationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalID", field.GenerationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApproverlID", field.GenerationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApprovalNotes", field.GenerationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalStatus", field.GenerationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalDateTıme", field.GenerationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationApprovalID", field.ValidationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApproverlID", field.ValidationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApprovalNotes", field.ValidationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalStatus", field.ValidationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalDateTıme", field.ValidationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionDateTıme", field.SubmissionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmitterID", field.SubmitterID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionNotes", field.SubmissionNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalDateTıme", field.SubmissionApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalSubmıtDateTıme", field.SubmissionApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalID", field.SubmissionApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalNotes", field.SubmissionApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalStatus", field.SubmissionApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RetryCount", field.RetryCount, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTime", field.ValidityEndDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityStatus", field.ValidityStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionDateTıme", field.RejectionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionReasons", field.RejectionReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerID", field.RejectionWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerStatus", field.RejectionWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerSubmitDateTıme", field.RejectionWFCheckerSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionWFApproverID", field.RejectionWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalStatus", field.RejectionWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalNotes", field.RejectionWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalSubmitDateTıme", field.RejectionWFApprovalSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationDateTıme", field.CancellationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationReasons", field.CancellationReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerID", field.CancellationWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerStatus", field.CancellationWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerSubmıtDateTıme", field.CancellationWFCheckerSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationWFApproverID", field.CancellationWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalStatus", field.CancellationWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalNotes", field.CancellationWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalSubmıtDateTıme", field.CancellationWFApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ETLJobName", field.ETLJobName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPricingCurrencyCode", field.CbcPricingCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCurrencyExchangeRate", field.CbcCurrencyExchangeRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcFrequencyofBilling", field.CbcFrequencyofBilling, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodStartDate", field.CbcBillingPeriodStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodEndDate", field.CbcBillingPeriodEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PaymentMode", field.PaymentMode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSupplierBankAccountNumber", field.CbcSupplierBankAccountNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillReferenceNumber", field.CbcBillReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceCalculationMode", field.SourceCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@EtlCalculationMode", field.EtlCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@İnvoiceFactorycalcutionMode", field.İnvoiceFactorycalcutionMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCategory", field.CbcTaxCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@validationlink", field.ValidationLink, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19ID", field.CustomsForm19ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19DocumentType", field.CustomsForm19DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@Incoterms", field.Incoterms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentType", field.FTADocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTAID", field.FTAID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentDesc", field.FTADocumentDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeAgencyName", field.SchemeAgencyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2ID", field.CustomsForm2ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2DocumentType", field.CustomsForm2DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesID", field.OtherChargesID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesChargeIndicator", field.OtherChargesChargeIndicator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAmount", field.OtherChargesAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAllowanceChargeReason", field.OtherChargesAllowanceChargeReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NotificationTemplateId", field.NotificationTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SMSTemplateId", field.SMSTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@OutputFormat", field.OutputFormat, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceIRBMUniqueNo", field.OriginalInvoiceIRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceNumber", field.OriginalInvoiceNumber, SqlDbType.NVarChar)
            };
            return parameters;
        }
        async Task<InvoiceLineItems> IETLService.InsertCreditNotelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertCreditNotelineData service called.");
                Console.WriteLine("InsertCreditNotelineData service called.");

                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[CreditNoteLineItems] (
                        [CreditNoteId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [CbcItemClassificationCode],
                        [CbcProductTariffClass],
                        [CbcTaxSchemeID],
                        [CbcTaxSchemeAgencyID],
                        [CbcTaxSchemeAgencyCode],
                        [CbcInvoiceLineNetAmount],
                        [CbcNetAmount],
                        [ProductId],
                        [CbcItemClassificationClass],
                        [CbcProductTariffCode],
                        [CbcSubtotal],
                        [CbcSSTTaxCategory],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @CreditNoteId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @CbcItemClassificationCode,
                        @CbcProductTariffClass,
                        @CbcTaxSchemeID,
                        @CbcTaxSchemeAgencyID,
                        @CbcTaxSchemeAgencyCode,
                        @CbcInvoiceLineNetAmount,
                        @CbcNetAmount,
                        @ProductId,
                        @CbcItemClassificationClass,
                        @CbcProductTariffCode,
                        @CbcSubtotal,
                        @CbcSSTTaxCategory,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertCreditnNoteLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");

                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertCreditNotelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertCreditNotelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertCreditnNoteLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@CreditNoteId", field.CreditNoteId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationCode", field.CbcItemClassificationCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffClass", field.CbcProductTariffClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeID", field.CbcTaxSchemeID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyID", field.CbcTaxSchemeAgencyID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcInvoiceLineNetAmount", field.CbcInvoiceLineNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcNetAmount", field.CbcNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@ProductId", field.ProductId, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationClass", field.CbcItemClassificationClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffCode", field.CbcProductTariffCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSubtotal", field.CbcSubtotal, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSSTTaxCategory", field.CbcSSTTaxCategory, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }
        async Task<DocTaxSubTotal> IETLService.InsertCreditNoteDocTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertCreditNoteDocTaxSubTotal service called.");
                Console.WriteLine("InsertCreditNoteDocTaxSubTotal service called.");
                const string sql = @"
                        INSERT INTO [dbo].[CreditNoteTaxSubTotal] (
                            [CreditNoteId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [CreditNoteLineItemId],
                            [CategoryTaxSchemeId],
                            [AmountExemptedFromTax],
                            [CbcTaxSchemeAgencyId],
                            [CbcTaxSchemeAgencyCode]
                        ) 
                        VALUES (
                            @CreditNoteId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @CreditNoteLineItemId,
                            @CategoryTaxSchemeId,
                            @AmountExemptedFromTax,
                            @CbcTaxSchemeAgencyId,
                            @CbcTaxSchemeAgencyCode
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertCreditNoteDocTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"CreditNoteDocTaxSubTotalDataTake Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"CreditNoteDocTaxSubTotalDataTake of {docTaxSubTotal.InvoiceId} Invoicenumber");

                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertCreditNoteDocTaxSubTotalDataTake service. {ex.Message}");
                Console.WriteLine($"Exception in InsertCreditNoteDocTaxSubTotalDataTake service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertCreditNoteDocTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@DocumentSubTotalId", field.DocumentSubTotalId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CreditNoteId", field.CreditNoteId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CreditNoteLineItemId", field.CreditNoteLineItemId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CategoryTaxSchemeId", field.CategoryTaxSchemeId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@AmountExemptedFromTax", field.AmountExemptedFromTax, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyId", field.CbcTaxSchemeAgencyId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar)
            };
            return parameters;
        }
        #endregion CreditnoteData
        #region DebitNoteData
        async Task<InvoiceData> IETLService.InsertDebitNoteData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertDebitNoteData service called.");
                Console.WriteLine("InsertDebitNoteData service called.");
                const string sql = @"INSERT [dbo].[DebitNoteData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [billerId] ,
                        [ValidationDate] ,
                        [ValidityHours] ,
                        [InvoiceDocumentReference] ,
                        [QRCode] ,
                        [IRBMValidationDate] ,
                        [ValidityEndDateTime] ,
                        [IRBMValidationTime] ,
                        [RemainingHours] ,
                        [SourceFileName] ,
                        [SourceName] ,
                        [FıleName] ,
                        [DataTıme] ,
                        [FolderName],
                        [InvoıceCreatorName] ,
                        [SourceInvoıceNumber] ,
                        [InvoıceNumberStatus] ,
                        [ProcessType] ,
                        [WorkflowType] ,
                        [SchedulerName] ,
                        [TaskID] ,
                        [CreationDateTıme] ,
                        [CreatorID] ,
                        [CreationNotes] ,
                        [CreationSubmissionDateTime] ,
                        [CreationApprovalDateTıme] ,
                        [CreationApprovalID] ,
                        [CreationApprovalNotes] ,
                        [CreationApprovalStatus] ,
                        [VerifıcationApprovalDateTıme] ,
                        [CreationApproverlID] ,
                        [VerificationApprovalID] ,
                        [VerificationApproverlID] ,
                        [VerificationApprovalNotes] ,
                        [GenerationApprovalID] ,
                        [GenerationApproverlID] ,
                        [GenerationApprovalNotes] ,
                        [GenerationApprovalStatus] ,
                        [GenerationApprovalDateTıme] ,
                        [ValidationApprovalID] ,
                        [ValidationApproverlID] ,
                        [ValidationApprovalNotes] ,
                        [ValidationApprovalStatus] ,
                        [ValidationApprovalDateTıme] ,
                        [SubmissionDateTıme] ,
                        [SubmitterID] ,
                        [SubmissionNotes] ,
                        [SubmissionApprovalDateTıme] ,
                        [SubmissionApprovalSubmıtDateTıme] ,
                        [SubmissionApprovalID] ,
                        [SubmissionApprovalNotes] ,
                        [SubmissionApprovalStatus] ,
                        [RetryCount] ,
                        [ValidityEndDateTıme] ,
                        [ValidityStatus] ,
                        [RejectionDateTıme] ,
                        [RejectionReasons] ,
                        [RejectionWFCheckerID] ,
                        [RejectionWFCheckerStatus] ,
                        [RejectionWFCheckerSubmitDateTıme] ,
                        [RejectionWFApproverID] ,
                        [RejectionWFApprovalStatus] ,
                        [RejectionWFApprovalNotes] ,
                        [RejectionWFApprovalSubmitDateTıme] ,
                        [CancellationDateTıme] ,
                        [CancellationReasons] ,
                        [CancellationWFCheckerID] ,
                        [CancellationWFCheckerStatus] ,
                        [CancellationWFCheckerSubmıtDateTıme] ,
                        [CancellationWFApproverID] ,
                        [CancellationWFApprovalStatus] ,
                        [CancellationWFApprovalNotes] ,
                        [CancellationWFApprovalSubmıtDateTıme] ,
                        [ETLJobName] ,
                        [cbcPricingCurrencyCode] ,
                        [cbcCurrencyExchangeRate] ,
                        [cbcFrequencyofBilling] ,
                        [cbcBillingPeriodStartDate] ,
                        [cbcBillingPeriodEndDate] ,
                        [PaymentMode] ,
                        [cbcSupplierBankAccountNumber] ,
                        [cbcBillReferenceNumber] ,
                        [SourceCalculationMode] ,
                        [EtlCalculationMode] ,
                        [İnvoiceFactorycalcutionMode] ,
                        [cbcTaxRate] ,
                        [cbcTaxCategory] ,
                        [validationlink] ,
                        [CustomsForm19ID] ,
                        [CustomsForm19DocumentType] ,
                        [Incoterms] ,
                        [FTADocumentType] ,
                        [FTAID] ,
                        [FTADocumentDesc] ,
                        [schemeAgencyName] ,
                        [CustomsForm2ID] ,
                        [CustomsForm2DocumentType] ,
                        [OtherChargesID] ,
                        [OtherChargesChargeIndicator] ,
                        [OtherChargesAmount] ,
                        [OtherChargesAllowanceChargeReason] ,
                        [NotificationTemplateId] ,
                        [SMSTemplateId] ,
                        [OutputFormat],
                        [OriginalInvoiceIRBMUniqueNo],
                        [OriginalInvoiceNumber])
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @billerId ,
                        @ValidationDate ,
                        @ValidityHours ,
                        @InvoiceDocumentReference ,
                        @QRCode ,
                        @IRBMValidationDate ,
                        @ValidityEndDateTime ,
                        @IRBMValidationTime ,
                        @RemainingHours ,
                        @SourceFileName ,
                        @SourceName ,
                        @FıleName ,
                        @DataTıme ,
                        @FolderName,
                        @InvoıceCreatorName ,
                        @SourceInvoıceNumber ,
                        @InvoıceNumberStatus ,
                        @ProcessType ,
                        @WorkflowType ,
                        @SchedulerName ,
                        @TaskID ,
                        @CreationDateTıme ,
                        @CreatorID ,
                        @CreationNotes ,
                        @CreationSubmissionDateTime ,
                        @CreationApprovalDateTıme ,
                        @CreationApprovalID ,
                        @CreationApprovalNotes ,
                        @CreationApprovalStatus ,
                        @VerifıcationApprovalDateTıme ,
                        @CreationApproverlID ,
                        @VerificationApprovalID ,
                        @VerificationApproverlID ,
                        @VerificationApprovalNotes ,
                        @GenerationApprovalID ,
                        @GenerationApproverlID ,
                        @GenerationApprovalNotes ,
                        @GenerationApprovalStatus ,
                        @GenerationApprovalDateTıme ,
                        @ValidationApprovalID ,
                        @ValidationApproverlID ,
                        @ValidationApprovalNotes ,
                        @ValidationApprovalStatus ,
                        @ValidationApprovalDateTıme ,
                        @SubmissionDateTıme ,
                        @SubmitterID ,
                        @SubmissionNotes ,
                        @SubmissionApprovalDateTıme ,
                        @SubmissionApprovalSubmıtDateTıme ,
                        @SubmissionApprovalID ,
                        @SubmissionApprovalNotes ,
                        @SubmissionApprovalStatus ,
                        @RetryCount ,
                        @ValidityEndDateTıme ,
                        @ValidityStatus ,
                        @RejectionDateTıme ,
                        @RejectionReasons ,
                        @RejectionWFCheckerID ,
                        @RejectionWFCheckerStatus ,
                        @RejectionWFCheckerSubmitDateTıme ,
                        @RejectionWFApproverID ,
                        @RejectionWFApprovalStatus ,
                        @RejectionWFApprovalNotes ,
                        @RejectionWFApprovalSubmitDateTıme ,
                        @CancellationDateTıme ,
                        @CancellationReasons ,
                        @CancellationWFCheckerID ,
                        @CancellationWFCheckerStatus ,
                        @CancellationWFCheckerSubmıtDateTıme ,
                        @CancellationWFApproverID ,
                        @CancellationWFApprovalStatus ,
                        @CancellationWFApprovalNotes ,
                        @CancellationWFApprovalSubmıtDateTıme ,
                        @ETLJobName ,
                        @cbcPricingCurrencyCode ,
                        @cbcCurrencyExchangeRate ,
                        @cbcFrequencyofBilling ,
                        @cbcBillingPeriodStartDate ,
                        @cbcBillingPeriodEndDate ,
                        @PaymentMode ,
                        @cbcSupplierBankAccountNumber ,
                        @cbcBillReferenceNumber ,
                        @SourceCalculationMode ,
                        @EtlCalculationMode ,
                        @İnvoiceFactorycalcutionMode ,
                        @cbcTaxRate ,
                        @cbcTaxCategory ,
                        @validationlink ,
                        @CustomsForm19ID ,
                        @CustomsForm19DocumentType ,
                        @Incoterms ,
                        @FTADocumentType ,
                        @FTAID ,
                        @FTADocumentDesc ,
                        @schemeAgencyName ,
                        @CustomsForm2ID ,
                        @CustomsForm2DocumentType ,
                        @OtherChargesID ,
                        @OtherChargesChargeIndicator ,
                        @OtherChargesAmount ,
                        @OtherChargesAllowanceChargeReason ,
                        @NotificationTemplateId ,
                        @SMSTemplateId ,
                        @OutputFormat ,
                        @OriginalInvoiceIRBMUniqueNo ,
                        @OriginalInvoiceNumber)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertDebitNoteDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertDebitNoteData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertDebitNoteData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertDebitNoteDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@billerId", field.BillerId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", field.InvoiceDocumentReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@QRCode", field.QRCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMValidationDate", field.IRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTıme", field.ValidityEndDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBMValidationTime", field.IRBMValidationTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RemainingHours", field.RemainingHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceFileName", field.SourceFileName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceName", field.SourceName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FıleName", field.FıleName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@DataTıme", field.DataTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@FolderName", field.FolderName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceCreatorName", field.InvoıceCreatorName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceInvoıceNumber", field.SourceInvoıceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceNumberStatus", field.InvoıceNumberStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ProcessType", field.ProcessType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowType", field.WorkflowType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SchedulerName", field.SchedulerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TaskID", field.TaskID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationDateTıme", field.CreationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatorID", field.CreatorID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationNotes", field.CreationNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationSubmissionDateTime", field.CreationSubmissionDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalDateTıme", field.CreationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CreationApprovalNotes", field.CreationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationApprovalStatus", field.CreationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@VerifıcationApprovalDateTıme", field.VerifıcationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApproverlID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApproverlID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalNotes", field.VerificationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalID", field.GenerationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApproverlID", field.GenerationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApprovalNotes", field.GenerationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalStatus", field.GenerationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalDateTıme", field.GenerationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationApprovalID", field.ValidationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApproverlID", field.ValidationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApprovalNotes", field.ValidationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalStatus", field.ValidationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalDateTıme", field.ValidationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionDateTıme", field.SubmissionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmitterID", field.SubmitterID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionNotes", field.SubmissionNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalDateTıme", field.SubmissionApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalSubmıtDateTıme", field.SubmissionApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalID", field.SubmissionApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalNotes", field.SubmissionApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalStatus", field.SubmissionApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RetryCount", field.RetryCount, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTime", field.ValidityEndDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityStatus", field.ValidityStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionDateTıme", field.RejectionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionReasons", field.RejectionReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerID", field.RejectionWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerStatus", field.RejectionWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerSubmitDateTıme", field.RejectionWFCheckerSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionWFApproverID", field.RejectionWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalStatus", field.RejectionWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalNotes", field.RejectionWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalSubmitDateTıme", field.RejectionWFApprovalSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationDateTıme", field.CancellationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationReasons", field.CancellationReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerID", field.CancellationWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerStatus", field.CancellationWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerSubmıtDateTıme", field.CancellationWFCheckerSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationWFApproverID", field.CancellationWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalStatus", field.CancellationWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalNotes", field.CancellationWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalSubmıtDateTıme", field.CancellationWFApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ETLJobName", field.ETLJobName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPricingCurrencyCode", field.CbcPricingCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCurrencyExchangeRate", field.CbcCurrencyExchangeRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcFrequencyofBilling", field.CbcFrequencyofBilling, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodStartDate", field.CbcBillingPeriodStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodEndDate", field.CbcBillingPeriodEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PaymentMode", field.PaymentMode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSupplierBankAccountNumber", field.CbcSupplierBankAccountNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillReferenceNumber", field.CbcBillReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceCalculationMode", field.SourceCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@EtlCalculationMode", field.EtlCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@İnvoiceFactorycalcutionMode", field.İnvoiceFactorycalcutionMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCategory", field.CbcTaxCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@validationlink", field.ValidationLink, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19ID", field.CustomsForm19ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19DocumentType", field.CustomsForm19DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@Incoterms", field.Incoterms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentType", field.FTADocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTAID", field.FTAID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentDesc", field.FTADocumentDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeAgencyName", field.SchemeAgencyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2ID", field.CustomsForm2ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2DocumentType", field.CustomsForm2DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesID", field.OtherChargesID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesChargeIndicator", field.OtherChargesChargeIndicator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAmount", field.OtherChargesAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAllowanceChargeReason", field.OtherChargesAllowanceChargeReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NotificationTemplateId", field.NotificationTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SMSTemplateId", field.SMSTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@OutputFormat", field.OutputFormat, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceIRBMUniqueNo", field.OriginalInvoiceIRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceNumber", field.OriginalInvoiceNumber, SqlDbType.NVarChar)
            };
            return parameters;
        }
        async Task<InvoiceLineItems> IETLService.InsertDebitNotelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertDebitNotelineData service called.");
                Console.WriteLine("InsertDebitNotelineData service called.");

                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[DebitNoteLineItems] (
                        [DebitNoteId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [CbcItemClassificationCode],
                        [CbcProductTariffClass],
                        [CbcTaxSchemeID],
                        [CbcTaxSchemeAgencyID],
                        [CbcTaxSchemeAgencyCode],
                        [CbcInvoiceLineNetAmount],
                        [CbcNetAmount],
                        [ProductId],
                        [CbcItemClassificationClass],
                        [CbcProductTariffCode],
                        [CbcSubtotal],
                        [CbcSSTTaxCategory],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @DebitNoteId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @CbcItemClassificationCode,
                        @CbcProductTariffClass,
                        @CbcTaxSchemeID,
                        @CbcTaxSchemeAgencyID,
                        @CbcTaxSchemeAgencyCode,
                        @CbcInvoiceLineNetAmount,
                        @CbcNetAmount,
                        @ProductId,
                        @CbcItemClassificationClass,
                        @CbcProductTariffCode,
                        @CbcSubtotal,
                        @CbcSSTTaxCategory,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertDebitnNoteLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");

                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertDebitNotelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertDebitNotelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertDebitnNoteLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@DebitNoteId", field.DebitNoteId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationCode", field.CbcItemClassificationCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffClass", field.CbcProductTariffClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeID", field.CbcTaxSchemeID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyID", field.CbcTaxSchemeAgencyID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcInvoiceLineNetAmount", field.CbcInvoiceLineNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcNetAmount", field.CbcNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@ProductId", field.ProductId, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationClass", field.CbcItemClassificationClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffCode", field.CbcProductTariffCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSubtotal", field.CbcSubtotal, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSSTTaxCategory", field.CbcSSTTaxCategory, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }
        async Task<DocTaxSubTotal> IETLService.InsertDebitNoteDocTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertDebitNoteDocTaxSubTotal service called.");
                Console.WriteLine("InsertDebitNoteDocTaxSubTotal service called.");
                const string sql = @"
                        INSERT INTO [dbo].[DebitNoteTaxSubTotal] (
                            [DebitNoteId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [DebitNoteLineItemId],
                            [CategoryTaxSchemeId],
                            [AmountExemptedFromTax],
                            [CbcTaxSchemeAgencyId],
                            [CbcTaxSchemeAgencyCode]
                        ) 
                        VALUES (
                            @DebitNoteId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @DebitNoteLineItemId,
                            @CategoryTaxSchemeId,
                            @AmountExemptedFromTax,
                            @CbcTaxSchemeAgencyId,
                            @CbcTaxSchemeAgencyCode
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertDebitNoteDocTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"DebitNoteDocTaxSubTotalDataTake Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"DebitNoteDocTaxSubTotalDataTake of {docTaxSubTotal.InvoiceId} Invoicenumber");
                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertDebitNoteDocTaxSubTotalDataTake service. {ex.Message}");
                Console.WriteLine($"Exception in InsertDebitNoteDocTaxSubTotalDataTake service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertDebitNoteDocTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@DocumentSubTotalId", field.DocumentSubTotalId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@DebitNoteId", field.DebitNoteId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@DebitNoteLineItemId", field.DebitNoteLineItemId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CategoryTaxSchemeId", field.CategoryTaxSchemeId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@AmountExemptedFromTax", field.AmountExemptedFromTax, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyId", field.CbcTaxSchemeAgencyId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar)
            };
            return parameters;
        }
        #endregion DebitNoteData
        #region RefundNoteData
        async Task<InvoiceData> IETLService.InsertRefundNoteData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertRefundNoteData service called.");
                Console.WriteLine("InsertRefundNoteData service called.");
                const string sql = @"INSERT [dbo].[RefundNoteData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [ValidationDate] ,
                        [ValidityHours])
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @ValidationDate ,
                        @ValidityHours)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertRefundNoteDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertRefundNoteData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertRefundNoteData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertRefundNoteDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar)
            };
            return parameters;
        }
        async Task<InvoiceLineItems> IETLService.InsertRefundNotelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertRefundNotelineData service called.");
                Console.WriteLine("InsertRefundNotelineData service called.");

                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[RefundNoteLineItems] (
                        [RefundNoteId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [cbcItemClassificationCodeClass],
                        [cbcItemClassificationCodePTC],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @RefundNoteId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @cbcItemClassificationCodeClass,
                        @cbcItemClassificationCodePTC,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertRefundNoteLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertDebitNotelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertDebitNotelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertRefundNoteLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@RefundNoteId", field.RefundNoteId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.cbcItemClassificationCodeClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.cbcItemClassificationCodePTC, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }
        async Task<DocTaxSubTotal> IETLService.InsertRefundNoteDocTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertRefundNoteDocTaxSubTotal service called.");
                Console.WriteLine("InsertRefundNoteDocTaxSubTotal service called.");
                Log.Information("========================================================");
                Console.WriteLine("========================================================");
                const string sql = @"
                        INSERT INTO [dbo].[RefundNoteTaxSubTotal] (
                            [RefundNoteId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [RefundNoteLineItemId]
                        ) 
                        VALUES (
                            @RefundNoteId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @RefundNoteLineItemId
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertRefundNoteDocTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"RefundNoteDocTaxSubTotalDataTake Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"RefundNoteDocTaxSubTotalDataTake of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Log.Information("========================================================");
                Console.WriteLine("========================================================");

                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertRefundNoteDocTaxSubTotalDataTake service. {ex.Message}");
                Console.WriteLine($"Exception in InsertRefundNoteDocTaxSubTotalDataTake service. {ex.Message}");
                Log.Information("========================================================");
                Console.WriteLine("========================================================");
                throw;
            }
        }
        private List<IDataParameter> InsertRefundNoteDocTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@DocumentSubTotalId", field.DocumentSubTotalId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@RefundNoteId", field.RefundNoteId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@RefundNoteLineItemId", field.RefundNoteLineItemId, SqlDbType.Int)
            };
            return parameters;
        }
        #endregion RefundNoteData
        #region SBInvoiceData
        async Task<InvoiceData> IETLService.InsertSBInvoiceData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertSBInvoiceData service called.");
                Console.WriteLine("InsertSBInvoiceData service called.");
                const string sql = @"INSERT [dbo].[SBInvoiceData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                     
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [billerId] ,
                        [ValidationDate] ,
                        [ValidityHours] ,
                        [InvoiceDocumentReference] ,
                        [QRCode] ,
                        [IRBMValidationDate] ,
                        [ValidityEndDateTime] ,
                        [IRBMValidationTime] ,
                        [RemainingHours] ,
                        [SourceFileName] ,
                        [SourceName] ,
                        [FıleName] ,
                        [DataTıme] ,
                        [FolderName],
                        [InvoıceCreatorName] ,
                        [SourceInvoıceNumber] ,
                        [InvoıceNumberStatus] ,
                        [ProcessType] ,
                        [WorkflowType] ,
                        [SchedulerName] ,
                        [TaskID] ,
                        [CreationDateTıme] ,
                        [CreatorID] ,
                        [CreationNotes] ,
                        [CreationSubmissionDateTime] ,
                        [CreationApprovalDateTıme] ,
                        [CreationApprovalID] ,
                        [CreationApprovalNotes] ,
                        [CreationApprovalStatus] ,
                        [VerifıcationApprovalDateTıme] ,
                        [CreationApproverlID] ,
                        [VerificationApprovalID] ,
                        [VerificationApproverlID] ,
                        [VerificationApprovalNotes] ,
                        [GenerationApprovalID] ,
                        [GenerationApproverlID] ,
                        [GenerationApprovalNotes] ,
                        [GenerationApprovalStatus] ,
                        [GenerationApprovalDateTıme] ,
                        [ValidationApprovalID] ,
                        [ValidationApproverlID] ,
                        [ValidationApprovalNotes] ,
                        [ValidationApprovalStatus] ,
                        [ValidationApprovalDateTıme] ,
                        [SubmissionDateTıme] ,
                        [SubmitterID] ,
                        [SubmissionNotes] ,
                        [SubmissionApprovalDateTıme] ,
                        [SubmissionApprovalSubmıtDateTıme] ,
                        [SubmissionApprovalID] ,
                        [SubmissionApprovalNotes] ,
                        [SubmissionApprovalStatus] ,
                        [RetryCount] ,
                        [ValidityEndDateTıme] ,
                        [ValidityStatus] ,
                        [RejectionDateTıme] ,
                        [RejectionReasons] ,
                        [RejectionWFCheckerID] ,
                        [RejectionWFCheckerStatus] ,
                        [RejectionWFCheckerSubmitDateTıme] ,
                        [RejectionWFApproverID] ,
                        [RejectionWFApprovalStatus] ,
                        [RejectionWFApprovalNotes] ,
                        [RejectionWFApprovalSubmitDateTıme] ,
                        [CancellationDateTıme] ,
                        [CancellationReasons] ,
                        [CancellationWFCheckerID] ,
                        [CancellationWFCheckerStatus] ,
                        [CancellationWFCheckerSubmıtDateTıme] ,
                        [CancellationWFApproverID] ,
                        [CancellationWFApprovalStatus] ,
                        [CancellationWFApprovalNotes] ,
                        [CancellationWFApprovalSubmıtDateTıme] ,
                        [ETLJobName] ,
                        [cbcPricingCurrencyCode] ,
                        [cbcCurrencyExchangeRate] ,
                        [cbcFrequencyofBilling] ,
                        [cbcBillingPeriodStartDate] ,
                        [cbcBillingPeriodEndDate] ,
                        [PaymentMode] ,
                        [cbcSupplierBankAccountNumber] ,
                        [cbcBillReferenceNumber] ,
                        [SourceCalculationMode] ,
                        [EtlCalculationMode] ,
                        [İnvoiceFactorycalcutionMode] ,
                        [cbcTaxRate] ,
                        [cbcTaxCategory] ,
                        [validationlink] ,
                        [CustomsForm19ID] ,
                        [CustomsForm19DocumentType] ,
                        [Incoterms] ,
                        [FTADocumentType] ,
                        [FTAID] ,
                        [FTADocumentDesc] ,
                        [schemeAgencyName] ,
                        [CustomsForm2ID] ,
                        [CustomsForm2DocumentType] ,
                        [OtherChargesID] ,
                        [OtherChargesChargeIndicator] ,
                        [OtherChargesAmount] ,
                        [OtherChargesAllowanceChargeReason] ,
                        [NotificationTemplateId] ,
                        [SMSTemplateId] ,
                        [OutputFormat])
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @billerId ,
                        @ValidationDate ,
                        @ValidityHours ,
                        @InvoiceDocumentReference ,
                        @QRCode ,
                        @IRBMValidationDate ,
                        @ValidityEndDateTime ,
                        @IRBMValidationTime ,
                        @RemainingHours ,
                        @SourceFileName ,
                        @SourceName ,
                        @FıleName ,
                        @DataTıme ,
                        @FolderName,
                        @InvoıceCreatorName ,
                        @SourceInvoıceNumber ,
                        @InvoıceNumberStatus ,
                        @ProcessType ,
                        @WorkflowType ,
                        @SchedulerName ,
                        @TaskID ,
                        @CreationDateTıme ,
                        @CreatorID ,
                        @CreationNotes ,
                        @CreationSubmissionDateTime ,
                        @CreationApprovalDateTıme ,
                        @CreationApprovalID ,
                        @CreationApprovalNotes ,
                        @CreationApprovalStatus ,
                        @VerifıcationApprovalDateTıme ,
                        @CreationApproverlID ,
                        @VerificationApprovalID ,
                        @VerificationApproverlID ,
                        @VerificationApprovalNotes ,
                        @GenerationApprovalID ,
                        @GenerationApproverlID ,
                        @GenerationApprovalNotes ,
                        @GenerationApprovalStatus ,
                        @GenerationApprovalDateTıme ,
                        @ValidationApprovalID ,
                        @ValidationApproverlID ,
                        @ValidationApprovalNotes ,
                        @ValidationApprovalStatus ,
                        @ValidationApprovalDateTıme ,
                        @SubmissionDateTıme ,
                        @SubmitterID ,
                        @SubmissionNotes ,
                        @SubmissionApprovalDateTıme ,
                        @SubmissionApprovalSubmıtDateTıme ,
                        @SubmissionApprovalID ,
                        @SubmissionApprovalNotes ,
                        @SubmissionApprovalStatus ,
                        @RetryCount ,
                        @ValidityEndDateTıme ,
                        @ValidityStatus ,
                        @RejectionDateTıme ,
                        @RejectionReasons ,
                        @RejectionWFCheckerID ,
                        @RejectionWFCheckerStatus ,
                        @RejectionWFCheckerSubmitDateTıme ,
                        @RejectionWFApproverID ,
                        @RejectionWFApprovalStatus ,
                        @RejectionWFApprovalNotes ,
                        @RejectionWFApprovalSubmitDateTıme ,
                        @CancellationDateTıme ,
                        @CancellationReasons ,
                        @CancellationWFCheckerID ,
                        @CancellationWFCheckerStatus ,
                        @CancellationWFCheckerSubmıtDateTıme ,
                        @CancellationWFApproverID ,
                        @CancellationWFApprovalStatus ,
                        @CancellationWFApprovalNotes ,
                        @CancellationWFApprovalSubmıtDateTıme ,
                        @ETLJobName ,
                        @cbcPricingCurrencyCode ,
                        @cbcCurrencyExchangeRate ,
                        @cbcFrequencyofBilling ,
                        @cbcBillingPeriodStartDate ,
                        @cbcBillingPeriodEndDate ,
                        @PaymentMode ,
                        @cbcSupplierBankAccountNumber ,
                        @cbcBillReferenceNumber ,
                        @SourceCalculationMode ,
                        @EtlCalculationMode ,
                        @İnvoiceFactorycalcutionMode ,
                        @cbcTaxRate ,
                        @cbcTaxCategory ,
                        @validationlink ,
                        @CustomsForm19ID ,
                        @CustomsForm19DocumentType ,
                        @Incoterms ,
                        @FTADocumentType ,
                        @FTAID ,
                        @FTADocumentDesc ,
                        @schemeAgencyName ,
                        @CustomsForm2ID ,
                        @CustomsForm2DocumentType ,
                        @OtherChargesID ,
                        @OtherChargesChargeIndicator ,
                        @OtherChargesAmount ,
                        @OtherChargesAllowanceChargeReason ,
                        @NotificationTemplateId ,
                        @SMSTemplateId ,
                        @OutputFormat)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertSBInvoiceDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBInvoiceData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertSBInvoiceData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBInvoiceDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@billerId", field.BillerId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", field.InvoiceDocumentReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@QRCode", field.QRCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMValidationDate", field.IRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTıme", field.ValidityEndDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBMValidationTime", field.IRBMValidationTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RemainingHours", field.RemainingHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceFileName", field.SourceFileName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceName", field.SourceName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FıleName", field.FıleName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@DataTıme", field.DataTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@FolderName", field.FolderName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceCreatorName", field.InvoıceCreatorName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceInvoıceNumber", field.SourceInvoıceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceNumberStatus", field.InvoıceNumberStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ProcessType", field.ProcessType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowType", field.WorkflowType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SchedulerName", field.SchedulerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TaskID", field.TaskID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationDateTıme", field.CreationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatorID", field.CreatorID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationNotes", field.CreationNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationSubmissionDateTime", field.CreationSubmissionDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalDateTıme", field.CreationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CreationApprovalNotes", field.CreationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationApprovalStatus", field.CreationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@VerifıcationApprovalDateTıme", field.VerifıcationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApproverlID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApproverlID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalNotes", field.VerificationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalID", field.GenerationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApproverlID", field.GenerationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApprovalNotes", field.GenerationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalStatus", field.GenerationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalDateTıme", field.GenerationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationApprovalID", field.ValidationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApproverlID", field.ValidationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApprovalNotes", field.ValidationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalStatus", field.ValidationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalDateTıme", field.ValidationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionDateTıme", field.SubmissionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmitterID", field.SubmitterID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionNotes", field.SubmissionNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalDateTıme", field.SubmissionApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalSubmıtDateTıme", field.SubmissionApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalID", field.SubmissionApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalNotes", field.SubmissionApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalStatus", field.SubmissionApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RetryCount", field.RetryCount, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTime", field.ValidityEndDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityStatus", field.ValidityStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionDateTıme", field.RejectionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionReasons", field.RejectionReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerID", field.RejectionWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerStatus", field.RejectionWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerSubmitDateTıme", field.RejectionWFCheckerSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionWFApproverID", field.RejectionWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalStatus", field.RejectionWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalNotes", field.RejectionWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalSubmitDateTıme", field.RejectionWFApprovalSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationDateTıme", field.CancellationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationReasons", field.CancellationReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerID", field.CancellationWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerStatus", field.CancellationWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerSubmıtDateTıme", field.CancellationWFCheckerSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationWFApproverID", field.CancellationWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalStatus", field.CancellationWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalNotes", field.CancellationWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalSubmıtDateTıme", field.CancellationWFApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ETLJobName", field.ETLJobName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPricingCurrencyCode", field.CbcPricingCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCurrencyExchangeRate", field.CbcCurrencyExchangeRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcFrequencyofBilling", field.CbcFrequencyofBilling, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodStartDate", field.CbcBillingPeriodStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodEndDate", field.CbcBillingPeriodEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PaymentMode", field.PaymentMode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSupplierBankAccountNumber", field.CbcSupplierBankAccountNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillReferenceNumber", field.CbcBillReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceCalculationMode", field.SourceCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@EtlCalculationMode", field.EtlCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@İnvoiceFactorycalcutionMode", field.İnvoiceFactorycalcutionMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCategory", field.CbcTaxCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@validationlink", field.ValidationLink, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19ID", field.CustomsForm19ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19DocumentType", field.CustomsForm19DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@Incoterms", field.Incoterms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentType", field.FTADocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTAID", field.FTAID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentDesc", field.FTADocumentDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeAgencyName", field.SchemeAgencyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2ID", field.CustomsForm2ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2DocumentType", field.CustomsForm2DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesID", field.OtherChargesID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesChargeIndicator", field.OtherChargesChargeIndicator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAmount", field.OtherChargesAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAllowanceChargeReason", field.OtherChargesAllowanceChargeReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NotificationTemplateId", field.NotificationTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SMSTemplateId", field.SMSTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@OutputFormat", field.OutputFormat, SqlDbType.NVarChar)
            };
            return parameters;
        }

        async Task<InvoiceLineItems> IETLService.InsertSBInvoicelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertSBInvoicelineData service called.");
                Console.WriteLine("InsertSBInvoicelineData service called.");

                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[SBInvoiceLineItems] (
                        [SBInvoiceId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [CbcItemClassificationCode],
                        [CbcProductTariffClass],
                        [CbcTaxSchemeID],
                        [CbcTaxSchemeAgencyID],
                        [CbcTaxSchemeAgencyCode],
                        [CbcInvoiceLineNetAmount],
                        [CbcNetAmount],
                        [ProductId],
                        [CbcItemClassificationClass],
                        [CbcProductTariffCode],
                        [CbcSubtotal],
                        [CbcSSTTaxCategory],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @SBInvoiceId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @CbcItemClassificationCode,
                        @CbcProductTariffClass,
                        @CbcTaxSchemeID,
                        @CbcTaxSchemeAgencyID,
                        @CbcTaxSchemeAgencyCode,
                        @CbcInvoiceLineNetAmount,
                        @CbcNetAmount,
                        @ProductId,
                        @CbcItemClassificationClass,
                        @CbcProductTariffCode,
                        @CbcSubtotal,
                        @CbcSSTTaxCategory,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBInvoiceLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.InvoiceId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.InvoiceId} Invoicenumber");

                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBInvoicelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBInvoicelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBInvoiceLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@SBInvoiceId", field.SBInvoiceId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationCode", field.CbcItemClassificationCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffClass", field.CbcProductTariffClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeID", field.CbcTaxSchemeID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyID", field.CbcTaxSchemeAgencyID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcInvoiceLineNetAmount", field.CbcInvoiceLineNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcNetAmount", field.CbcNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@ProductId", field.ProductId, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationClass", field.CbcItemClassificationClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffCode", field.CbcProductTariffCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSubtotal", field.CbcSubtotal, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSSTTaxCategory", field.CbcSSTTaxCategory, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }

        async Task<DocTaxSubTotal> IETLService.InsertSBInvoiceDocTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertSBInvoiceDocTaxSubTotal service called.");
                Console.WriteLine("InsertSBInvoiceDocTaxSubTotal service called.");
                const string sql = @"
                        INSERT INTO [dbo].[SBInvoiceTaxSubTotal] (
                            [SBInvoiceId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [SBInvoiceLineItemId],
                            [CategoryTaxSchemeId],
                            [AmountExemptedFromTax],
                            [CbcTaxSchemeAgencyId],
                            [CbcTaxSchemeAgencyCode]
                        ) 
                        VALUES (
                            @SBInvoiceId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @SBInvoiceLineItemId,
                            @CategoryTaxSchemeId,
                            @AmountExemptedFromTax,
                            @CbcTaxSchemeAgencyId,
                            @CbcTaxSchemeAgencyCode
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBInvoiceDocTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"SBInvoiceDoctaxSubTotal Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"SBInvoiceDocTaxSubTotal Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBInvoiceDocTaxSubTotal service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBInvoiceDocTaxSubTotal service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBInvoiceDocTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@DocumentSubTotalId", field.DocumentSubTotalId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@SBInvoiceId", field.SBInvoiceId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SBInvoiceLineItemId", field.SBInvoiceLineItemId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CategoryTaxSchemeId", field.CategoryTaxSchemeId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@AmountExemptedFromTax", field.AmountExemptedFromTax, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyId", field.CbcTaxSchemeAgencyId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar)
            };
            return parameters;
        }
        #endregion SBInvoiceData
        #region SBCreditNoteData
        async Task<InvoiceData> IETLService.InsertSBCreditNoteData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertSBCreditNoteData service called.");
                Console.WriteLine("InsertSBCreditNoteData service called.");
                const string sql = @"INSERT [dbo].[SBCreditNoteData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [billerId] ,
                        [ValidationDate] ,
                        [ValidityHours] ,
                        [InvoiceDocumentReference] ,
                        [QRCode] ,
                        [IRBMValidationDate] ,
                        [ValidityEndDateTime] ,
                        [IRBMValidationTime] ,
                        [RemainingHours] ,
                        [SourceFileName] ,
                        [SourceName] ,
                        [FıleName] ,
                        [DataTıme] ,
                        [FolderName],
                        [InvoıceCreatorName] ,
                        [SourceInvoıceNumber] ,
                        [InvoıceNumberStatus] ,
                        [ProcessType] ,
                        [WorkflowType] ,
                        [SchedulerName] ,
                        [TaskID] ,
                        [CreationDateTıme] ,
                        [CreatorID] ,
                        [CreationNotes] ,
                        [CreationSubmissionDateTime] ,
                        [CreationApprovalDateTıme] ,
                        [CreationApprovalID] ,
                        [CreationApprovalNotes] ,
                        [CreationApprovalStatus] ,
                        [VerifıcationApprovalDateTıme] ,
                        [CreationApproverlID] ,
                        [VerificationApprovalID] ,
                        [VerificationApproverlID] ,
                        [VerificationApprovalNotes] ,
                        [GenerationApprovalID] ,
                        [GenerationApproverlID] ,
                        [GenerationApprovalNotes] ,
                        [GenerationApprovalStatus] ,
                        [GenerationApprovalDateTıme] ,
                        [ValidationApprovalID] ,
                        [ValidationApproverlID] ,
                        [ValidationApprovalNotes] ,
                        [ValidationApprovalStatus] ,
                        [ValidationApprovalDateTıme] ,
                        [SubmissionDateTıme] ,
                        [SubmitterID] ,
                        [SubmissionNotes] ,
                        [SubmissionApprovalDateTıme] ,
                        [SubmissionApprovalSubmıtDateTıme] ,
                        [SubmissionApprovalID] ,
                        [SubmissionApprovalNotes] ,
                        [SubmissionApprovalStatus] ,
                        [RetryCount] ,
                        [ValidityEndDateTıme] ,
                        [ValidityStatus] ,
                        [RejectionDateTıme] ,
                        [RejectionReasons] ,
                        [RejectionWFCheckerID] ,
                        [RejectionWFCheckerStatus] ,
                        [RejectionWFCheckerSubmitDateTıme] ,
                        [RejectionWFApproverID] ,
                        [RejectionWFApprovalStatus] ,
                        [RejectionWFApprovalNotes] ,
                        [RejectionWFApprovalSubmitDateTıme] ,
                        [CancellationDateTıme] ,
                        [CancellationReasons] ,
                        [CancellationWFCheckerID] ,
                        [CancellationWFCheckerStatus] ,
                        [CancellationWFCheckerSubmıtDateTıme] ,
                        [CancellationWFApproverID] ,
                        [CancellationWFApprovalStatus] ,
                        [CancellationWFApprovalNotes] ,
                        [CancellationWFApprovalSubmıtDateTıme] ,
                        [ETLJobName] ,
                        [cbcPricingCurrencyCode] ,
                        [cbcCurrencyExchangeRate] ,
                        [cbcFrequencyofBilling] ,
                        [cbcBillingPeriodStartDate] ,
                        [cbcBillingPeriodEndDate] ,
                        [PaymentMode] ,
                        [cbcSupplierBankAccountNumber] ,
                        [cbcBillReferenceNumber] ,
                        [SourceCalculationMode] ,
                        [EtlCalculationMode] ,
                        [İnvoiceFactorycalcutionMode] ,
                        [cbcTaxRate] ,
                        [cbcTaxCategory] ,
                        [validationlink] ,
                        [CustomsForm19ID] ,
                        [CustomsForm19DocumentType] ,
                        [Incoterms] ,
                        [FTADocumentType] ,
                        [FTAID] ,
                        [FTADocumentDesc] ,
                        [schemeAgencyName] ,
                        [CustomsForm2ID] ,
                        [CustomsForm2DocumentType] ,
                        [OtherChargesID] ,
                        [OtherChargesChargeIndicator] ,
                        [OtherChargesAmount] ,
                        [OtherChargesAllowanceChargeReason] ,
                        [NotificationTemplateId] ,
                        [SMSTemplateId] ,
                        [OutputFormat],
                        [OriginalInvoiceIRBMUniqueNo],
                        [OriginalInvoiceNumber])
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @billerId ,
                        @ValidationDate ,
                        @ValidityHours ,
                        @InvoiceDocumentReference ,
                        @QRCode ,
                        @IRBMValidationDate ,
                        @ValidityEndDateTime ,
                        @IRBMValidationTime ,
                        @RemainingHours ,
                        @SourceFileName ,
                        @SourceName ,
                        @FıleName ,
                        @DataTıme ,
                        @FolderName,
                        @InvoıceCreatorName ,
                        @SourceInvoıceNumber ,
                        @InvoıceNumberStatus ,
                        @ProcessType ,
                        @WorkflowType ,
                        @SchedulerName ,
                        @TaskID ,
                        @CreationDateTıme ,
                        @CreatorID ,
                        @CreationNotes ,
                        @CreationSubmissionDateTime ,
                        @CreationApprovalDateTıme ,
                        @CreationApprovalID ,
                        @CreationApprovalNotes ,
                        @CreationApprovalStatus ,
                        @VerifıcationApprovalDateTıme ,
                        @CreationApproverlID ,
                        @VerificationApprovalID ,
                        @VerificationApproverlID ,
                        @VerificationApprovalNotes ,
                        @GenerationApprovalID ,
                        @GenerationApproverlID ,
                        @GenerationApprovalNotes ,
                        @GenerationApprovalStatus ,
                        @GenerationApprovalDateTıme ,
                        @ValidationApprovalID ,
                        @ValidationApproverlID ,
                        @ValidationApprovalNotes ,
                        @ValidationApprovalStatus ,
                        @ValidationApprovalDateTıme ,
                        @SubmissionDateTıme ,
                        @SubmitterID ,
                        @SubmissionNotes ,
                        @SubmissionApprovalDateTıme ,
                        @SubmissionApprovalSubmıtDateTıme ,
                        @SubmissionApprovalID ,
                        @SubmissionApprovalNotes ,
                        @SubmissionApprovalStatus ,
                        @RetryCount ,
                        @ValidityEndDateTıme ,
                        @ValidityStatus ,
                        @RejectionDateTıme ,
                        @RejectionReasons ,
                        @RejectionWFCheckerID ,
                        @RejectionWFCheckerStatus ,
                        @RejectionWFCheckerSubmitDateTıme ,
                        @RejectionWFApproverID ,
                        @RejectionWFApprovalStatus ,
                        @RejectionWFApprovalNotes ,
                        @RejectionWFApprovalSubmitDateTıme ,
                        @CancellationDateTıme ,
                        @CancellationReasons ,
                        @CancellationWFCheckerID ,
                        @CancellationWFCheckerStatus ,
                        @CancellationWFCheckerSubmıtDateTıme ,
                        @CancellationWFApproverID ,
                        @CancellationWFApprovalStatus ,
                        @CancellationWFApprovalNotes ,
                        @CancellationWFApprovalSubmıtDateTıme ,
                        @ETLJobName ,
                        @cbcPricingCurrencyCode ,
                        @cbcCurrencyExchangeRate ,
                        @cbcFrequencyofBilling ,
                        @cbcBillingPeriodStartDate ,
                        @cbcBillingPeriodEndDate ,
                        @PaymentMode ,
                        @cbcSupplierBankAccountNumber ,
                        @cbcBillReferenceNumber ,
                        @SourceCalculationMode ,
                        @EtlCalculationMode ,
                        @İnvoiceFactorycalcutionMode ,
                        @cbcTaxRate ,
                        @cbcTaxCategory ,
                        @validationlink ,
                        @CustomsForm19ID ,
                        @CustomsForm19DocumentType ,
                        @Incoterms ,
                        @FTADocumentType ,
                        @FTAID ,
                        @FTADocumentDesc ,
                        @schemeAgencyName ,
                        @CustomsForm2ID ,
                        @CustomsForm2DocumentType ,
                        @OtherChargesID ,
                        @OtherChargesChargeIndicator ,
                        @OtherChargesAmount ,
                        @OtherChargesAllowanceChargeReason ,
                        @NotificationTemplateId ,
                        @SMSTemplateId ,
                        @OutputFormat ,
                        @OriginalInvoiceIRBMUniqueNo ,
                        @OriginalInvoiceNumber)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertSBCreditNoteDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBCreditNoteData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertSBCreditNoteData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBCreditNoteDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@billerId", field.BillerId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", field.InvoiceDocumentReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@QRCode", field.QRCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMValidationDate", field.IRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTıme", field.ValidityEndDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBMValidationTime", field.IRBMValidationTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RemainingHours", field.RemainingHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceFileName", field.SourceFileName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceName", field.SourceName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FıleName", field.FıleName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@DataTıme", field.DataTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@FolderName", field.FolderName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceCreatorName", field.InvoıceCreatorName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceInvoıceNumber", field.SourceInvoıceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceNumberStatus", field.InvoıceNumberStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ProcessType", field.ProcessType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowType", field.WorkflowType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SchedulerName", field.SchedulerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TaskID", field.TaskID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationDateTıme", field.CreationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatorID", field.CreatorID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationNotes", field.CreationNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationSubmissionDateTime", field.CreationSubmissionDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalDateTıme", field.CreationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CreationApprovalNotes", field.CreationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationApprovalStatus", field.CreationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@VerifıcationApprovalDateTıme", field.VerifıcationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApproverlID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApproverlID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalNotes", field.VerificationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalID", field.GenerationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApproverlID", field.GenerationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApprovalNotes", field.GenerationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalStatus", field.GenerationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalDateTıme", field.GenerationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationApprovalID", field.ValidationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApproverlID", field.ValidationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApprovalNotes", field.ValidationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalStatus", field.ValidationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalDateTıme", field.ValidationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionDateTıme", field.SubmissionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmitterID", field.SubmitterID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionNotes", field.SubmissionNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalDateTıme", field.SubmissionApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalSubmıtDateTıme", field.SubmissionApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalID", field.SubmissionApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalNotes", field.SubmissionApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalStatus", field.SubmissionApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RetryCount", field.RetryCount, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTime", field.ValidityEndDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityStatus", field.ValidityStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionDateTıme", field.RejectionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionReasons", field.RejectionReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerID", field.RejectionWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerStatus", field.RejectionWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerSubmitDateTıme", field.RejectionWFCheckerSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionWFApproverID", field.RejectionWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalStatus", field.RejectionWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalNotes", field.RejectionWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalSubmitDateTıme", field.RejectionWFApprovalSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationDateTıme", field.CancellationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationReasons", field.CancellationReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerID", field.CancellationWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerStatus", field.CancellationWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerSubmıtDateTıme", field.CancellationWFCheckerSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationWFApproverID", field.CancellationWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalStatus", field.CancellationWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalNotes", field.CancellationWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalSubmıtDateTıme", field.CancellationWFApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ETLJobName", field.ETLJobName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPricingCurrencyCode", field.CbcPricingCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCurrencyExchangeRate", field.CbcCurrencyExchangeRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcFrequencyofBilling", field.CbcFrequencyofBilling, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodStartDate", field.CbcBillingPeriodStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodEndDate", field.CbcBillingPeriodEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PaymentMode", field.PaymentMode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSupplierBankAccountNumber", field.CbcSupplierBankAccountNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillReferenceNumber", field.CbcBillReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceCalculationMode", field.SourceCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@EtlCalculationMode", field.EtlCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@İnvoiceFactorycalcutionMode", field.İnvoiceFactorycalcutionMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCategory", field.CbcTaxCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@validationlink", field.ValidationLink, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19ID", field.CustomsForm19ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19DocumentType", field.CustomsForm19DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@Incoterms", field.Incoterms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentType", field.FTADocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTAID", field.FTAID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentDesc", field.FTADocumentDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeAgencyName", field.SchemeAgencyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2ID", field.CustomsForm2ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2DocumentType", field.CustomsForm2DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesID", field.OtherChargesID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesChargeIndicator", field.OtherChargesChargeIndicator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAmount", field.OtherChargesAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAllowanceChargeReason", field.OtherChargesAllowanceChargeReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NotificationTemplateId", field.NotificationTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SMSTemplateId", field.SMSTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@OutputFormat", field.OutputFormat, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceIRBMUniqueNo", field.OriginalInvoiceIRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceNumber", field.OriginalInvoiceNumber, SqlDbType.NVarChar)
            };
            return parameters;
        }
        async Task<InvoiceLineItems> IETLService.InsertSBCreditNotelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertSBCreditNotelineData service called.");
                Console.WriteLine("InsertSBCreditNotelineData service called.");

                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[SBCreditNoteLineItems] (
                        [SBCreditNoteId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [CbcItemClassificationCode],
                        [CbcProductTariffClass],
                        [CbcTaxSchemeID],
                        [CbcTaxSchemeAgencyID],
                        [CbcTaxSchemeAgencyCode],
                        [CbcInvoiceLineNetAmount],
                        [CbcNetAmount],
                        [ProductId],
                        [CbcItemClassificationClass],
                        [CbcProductTariffCode],
                        [CbcSubtotal],
                        [CbcSSTTaxCategory],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @SBCreditNoteId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @CbcItemClassificationCode,
                        @CbcProductTariffClass,
                        @CbcTaxSchemeID,
                        @CbcTaxSchemeAgencyID,
                        @CbcTaxSchemeAgencyCode,
                        @CbcInvoiceLineNetAmount,
                        @CbcNetAmount,
                        @ProductId,
                        @CbcItemClassificationClass,
                        @CbcProductTariffCode,
                        @CbcSubtotal,
                        @CbcSSTTaxCategory,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBCreditnNoteLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBCreditNotelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBCreditNotelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBCreditnNoteLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@SBCreditNoteId", field.SBCreditNoteId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationCode", field.CbcItemClassificationCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffClass", field.CbcProductTariffClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeID", field.CbcTaxSchemeID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyID", field.CbcTaxSchemeAgencyID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcInvoiceLineNetAmount", field.CbcInvoiceLineNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcNetAmount", field.CbcNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@ProductId", field.ProductId, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationClass", field.CbcItemClassificationClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffCode", field.CbcProductTariffCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSubtotal", field.CbcSubtotal, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSSTTaxCategory", field.CbcSSTTaxCategory, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }
        async Task<DocTaxSubTotal> IETLService.InsertSBCreditNoteTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertSBCreditNoteTaxSubTotal service called.");
                Console.WriteLine("InsertSBCreditNoteTaxSubTotal service called.");
                const string sql = @"
                        INSERT INTO [dbo].[SBCreditNoteTaxSubTotal] (
                            [SBCreditNoteId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [SBCreditNoteLineItemId],
                            [CategoryTaxSchemeId],
                            [AmountExemptedFromTax],
                            [CbcTaxSchemeAgencyId],
                            [CbcTaxSchemeAgencyCode]
                        ) 
                        VALUES (
                            @SBCreditNoteId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @SBCreditNoteLineItemId,
                            @CategoryTaxSchemeId,
                            @AmountExemptedFromTax,
                            @CbcTaxSchemeAgencyId,
                            @CbcTaxSchemeAgencyCode
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBCreditNoteDocTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"SBCreditNoteDocTaxSubTotalDataTake Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"SBCreditNoteDocTaxSubTotalDataTake of {docTaxSubTotal.InvoiceId} Invoicenumber");
                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBCreditNoteTaxSubTotal service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBCreditNoteTaxSubTotal service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBCreditNoteDocTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@SBCreditNoteId", field.SBCreditNoteId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CreditNoteId", field.CreditNoteId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SBCreditNoteLineItemId", field.SBCreditNoteLineItemId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CategoryTaxSchemeId", field.CategoryTaxSchemeId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@AmountExemptedFromTax", field.AmountExemptedFromTax, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyId", field.CbcTaxSchemeAgencyId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar)
            };
            return parameters;
        }
        #endregion SBCreditNoteData
        #region SBDebitNoteData
        async Task<InvoiceData> IETLService.InsertSBDebitNoteData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertSBDebitNoteData service called.");
                Console.WriteLine("InsertSBDebitNoteData service called.");
                const string sql = @"INSERT [dbo].[SBDebitNoteData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [billerId] ,
                        [ValidationDate] ,
                        [ValidityHours] ,
                        [InvoiceDocumentReference] ,
                        [QRCode] ,
                        [IRBMValidationDate] ,
                        [ValidityEndDateTime] ,
                        [IRBMValidationTime] ,
                        [RemainingHours] ,
                        [SourceFileName] ,
                        [SourceName] ,
                        [FıleName] ,
                        [DataTıme] ,
                        [FolderName],
                        [InvoıceCreatorName] ,
                        [SourceInvoıceNumber] ,
                        [InvoıceNumberStatus] ,
                        [ProcessType] ,
                        [WorkflowType] ,
                        [SchedulerName] ,
                        [TaskID] ,
                        [CreationDateTıme] ,
                        [CreatorID] ,
                        [CreationNotes] ,
                        [CreationSubmissionDateTime] ,
                        [CreationApprovalDateTıme] ,
                        [CreationApprovalID] ,
                        [CreationApprovalNotes] ,
                        [CreationApprovalStatus] ,
                        [VerifıcationApprovalDateTıme] ,
                        [CreationApproverlID] ,
                        [VerificationApprovalID] ,
                        [VerificationApproverlID] ,
                        [VerificationApprovalNotes] ,
                        [GenerationApprovalID] ,
                        [GenerationApproverlID] ,
                        [GenerationApprovalNotes] ,
                        [GenerationApprovalStatus] ,
                        [GenerationApprovalDateTıme] ,
                        [ValidationApprovalID] ,
                        [ValidationApproverlID] ,
                        [ValidationApprovalNotes] ,
                        [ValidationApprovalStatus] ,
                        [ValidationApprovalDateTıme] ,
                        [SubmissionDateTıme] ,
                        [SubmitterID] ,
                        [SubmissionNotes] ,
                        [SubmissionApprovalDateTıme] ,
                        [SubmissionApprovalSubmıtDateTıme] ,
                        [SubmissionApprovalID] ,
                        [SubmissionApprovalNotes] ,
                        [SubmissionApprovalStatus] ,
                        [RetryCount] ,
                        [ValidityEndDateTıme] ,
                        [ValidityStatus] ,
                        [RejectionDateTıme] ,
                        [RejectionReasons] ,
                        [RejectionWFCheckerID] ,
                        [RejectionWFCheckerStatus] ,
                        [RejectionWFCheckerSubmitDateTıme] ,
                        [RejectionWFApproverID] ,
                        [RejectionWFApprovalStatus] ,
                        [RejectionWFApprovalNotes] ,
                        [RejectionWFApprovalSubmitDateTıme] ,
                        [CancellationDateTıme] ,
                        [CancellationReasons] ,
                        [CancellationWFCheckerID] ,
                        [CancellationWFCheckerStatus] ,
                        [CancellationWFCheckerSubmıtDateTıme] ,
                        [CancellationWFApproverID] ,
                        [CancellationWFApprovalStatus] ,
                        [CancellationWFApprovalNotes] ,
                        [CancellationWFApprovalSubmıtDateTıme] ,
                        [ETLJobName] ,
                        [cbcPricingCurrencyCode] ,
                        [cbcCurrencyExchangeRate] ,
                        [cbcFrequencyofBilling] ,
                        [cbcBillingPeriodStartDate] ,
                        [cbcBillingPeriodEndDate] ,
                        [PaymentMode] ,
                        [cbcSupplierBankAccountNumber] ,
                        [cbcBillReferenceNumber] ,
                        [SourceCalculationMode] ,
                        [EtlCalculationMode] ,
                        [İnvoiceFactorycalcutionMode] ,
                        [cbcTaxRate] ,
                        [cbcTaxCategory] ,
                        [validationlink] ,
                        [CustomsForm19ID] ,
                        [CustomsForm19DocumentType] ,
                        [Incoterms] ,
                        [FTADocumentType] ,
                        [FTAID] ,
                        [FTADocumentDesc] ,
                        [schemeAgencyName] ,
                        [CustomsForm2ID] ,
                        [CustomsForm2DocumentType] ,
                        [OtherChargesID] ,
                        [OtherChargesChargeIndicator] ,
                        [OtherChargesAmount] ,
                        [OtherChargesAllowanceChargeReason] ,
                        [NotificationTemplateId] ,
                        [SMSTemplateId] ,
                        [OutputFormat],
                        [OriginalInvoiceIRBMUniqueNo],
                        [OriginalInvoiceNumber])
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @billerId ,
                        @ValidationDate ,
                        @ValidityHours ,
                        @InvoiceDocumentReference ,
                        @QRCode ,
                        @IRBMValidationDate ,
                        @ValidityEndDateTime ,
                        @IRBMValidationTime ,
                        @RemainingHours ,
                        @SourceFileName ,
                        @SourceName ,
                        @FıleName ,
                        @DataTıme ,
                        @FolderName,
                        @InvoıceCreatorName ,
                        @SourceInvoıceNumber ,
                        @InvoıceNumberStatus ,
                        @ProcessType ,
                        @WorkflowType ,
                        @SchedulerName ,
                        @TaskID ,
                        @CreationDateTıme ,
                        @CreatorID ,
                        @CreationNotes ,
                        @CreationSubmissionDateTime ,
                        @CreationApprovalDateTıme ,
                        @CreationApprovalID ,
                        @CreationApprovalNotes ,
                        @CreationApprovalStatus ,
                        @VerifıcationApprovalDateTıme ,
                        @CreationApproverlID ,
                        @VerificationApprovalID ,
                        @VerificationApproverlID ,
                        @VerificationApprovalNotes ,
                        @GenerationApprovalID ,
                        @GenerationApproverlID ,
                        @GenerationApprovalNotes ,
                        @GenerationApprovalStatus ,
                        @GenerationApprovalDateTıme ,
                        @ValidationApprovalID ,
                        @ValidationApproverlID ,
                        @ValidationApprovalNotes ,
                        @ValidationApprovalStatus ,
                        @ValidationApprovalDateTıme ,
                        @SubmissionDateTıme ,
                        @SubmitterID ,
                        @SubmissionNotes ,
                        @SubmissionApprovalDateTıme ,
                        @SubmissionApprovalSubmıtDateTıme ,
                        @SubmissionApprovalID ,
                        @SubmissionApprovalNotes ,
                        @SubmissionApprovalStatus ,
                        @RetryCount ,
                        @ValidityEndDateTıme ,
                        @ValidityStatus ,
                        @RejectionDateTıme ,
                        @RejectionReasons ,
                        @RejectionWFCheckerID ,
                        @RejectionWFCheckerStatus ,
                        @RejectionWFCheckerSubmitDateTıme ,
                        @RejectionWFApproverID ,
                        @RejectionWFApprovalStatus ,
                        @RejectionWFApprovalNotes ,
                        @RejectionWFApprovalSubmitDateTıme ,
                        @CancellationDateTıme ,
                        @CancellationReasons ,
                        @CancellationWFCheckerID ,
                        @CancellationWFCheckerStatus ,
                        @CancellationWFCheckerSubmıtDateTıme ,
                        @CancellationWFApproverID ,
                        @CancellationWFApprovalStatus ,
                        @CancellationWFApprovalNotes ,
                        @CancellationWFApprovalSubmıtDateTıme ,
                        @ETLJobName ,
                        @cbcPricingCurrencyCode ,
                        @cbcCurrencyExchangeRate ,
                        @cbcFrequencyofBilling ,
                        @cbcBillingPeriodStartDate ,
                        @cbcBillingPeriodEndDate ,
                        @PaymentMode ,
                        @cbcSupplierBankAccountNumber ,
                        @cbcBillReferenceNumber ,
                        @SourceCalculationMode ,
                        @EtlCalculationMode ,
                        @İnvoiceFactorycalcutionMode ,
                        @cbcTaxRate ,
                        @cbcTaxCategory ,
                        @validationlink ,
                        @CustomsForm19ID ,
                        @CustomsForm19DocumentType ,
                        @Incoterms ,
                        @FTADocumentType ,
                        @FTAID ,
                        @FTADocumentDesc ,
                        @schemeAgencyName ,
                        @CustomsForm2ID ,
                        @CustomsForm2DocumentType ,
                        @OtherChargesID ,
                        @OtherChargesChargeIndicator ,
                        @OtherChargesAmount ,
                        @OtherChargesAllowanceChargeReason ,
                        @NotificationTemplateId ,
                        @SMSTemplateId ,
                        @OutputFormat ,
                        @OriginalInvoiceIRBMUniqueNo ,
                        @OriginalInvoiceNumber)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertSBDebitNoteDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBDebitNoteData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertSBDebitNoteData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBDebitNoteDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@billerId", field.BillerId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", field.InvoiceDocumentReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@QRCode", field.QRCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMValidationDate", field.IRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTıme", field.ValidityEndDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBMValidationTime", field.IRBMValidationTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RemainingHours", field.RemainingHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceFileName", field.SourceFileName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceName", field.SourceName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FıleName", field.FıleName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@DataTıme", field.DataTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@FolderName", field.FolderName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceCreatorName", field.InvoıceCreatorName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceInvoıceNumber", field.SourceInvoıceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceNumberStatus", field.InvoıceNumberStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ProcessType", field.ProcessType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowType", field.WorkflowType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SchedulerName", field.SchedulerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TaskID", field.TaskID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationDateTıme", field.CreationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatorID", field.CreatorID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationNotes", field.CreationNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationSubmissionDateTime", field.CreationSubmissionDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalDateTıme", field.CreationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CreationApprovalNotes", field.CreationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationApprovalStatus", field.CreationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@VerifıcationApprovalDateTıme", field.VerifıcationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApproverlID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApproverlID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalNotes", field.VerificationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalID", field.GenerationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApproverlID", field.GenerationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApprovalNotes", field.GenerationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalStatus", field.GenerationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalDateTıme", field.GenerationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationApprovalID", field.ValidationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApproverlID", field.ValidationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApprovalNotes", field.ValidationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalStatus", field.ValidationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalDateTıme", field.ValidationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionDateTıme", field.SubmissionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmitterID", field.SubmitterID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionNotes", field.SubmissionNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalDateTıme", field.SubmissionApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalSubmıtDateTıme", field.SubmissionApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalID", field.SubmissionApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalNotes", field.SubmissionApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalStatus", field.SubmissionApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RetryCount", field.RetryCount, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTime", field.ValidityEndDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityStatus", field.ValidityStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionDateTıme", field.RejectionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionReasons", field.RejectionReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerID", field.RejectionWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerStatus", field.RejectionWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerSubmitDateTıme", field.RejectionWFCheckerSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionWFApproverID", field.RejectionWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalStatus", field.RejectionWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalNotes", field.RejectionWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalSubmitDateTıme", field.RejectionWFApprovalSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationDateTıme", field.CancellationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationReasons", field.CancellationReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerID", field.CancellationWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerStatus", field.CancellationWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerSubmıtDateTıme", field.CancellationWFCheckerSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationWFApproverID", field.CancellationWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalStatus", field.CancellationWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalNotes", field.CancellationWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalSubmıtDateTıme", field.CancellationWFApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ETLJobName", field.ETLJobName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPricingCurrencyCode", field.CbcPricingCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCurrencyExchangeRate", field.CbcCurrencyExchangeRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcFrequencyofBilling", field.CbcFrequencyofBilling, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodStartDate", field.CbcBillingPeriodStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodEndDate", field.CbcBillingPeriodEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PaymentMode", field.PaymentMode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSupplierBankAccountNumber", field.CbcSupplierBankAccountNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillReferenceNumber", field.CbcBillReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceCalculationMode", field.SourceCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@EtlCalculationMode", field.EtlCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@İnvoiceFactorycalcutionMode", field.İnvoiceFactorycalcutionMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCategory", field.CbcTaxCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@validationlink", field.ValidationLink, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19ID", field.CustomsForm19ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19DocumentType", field.CustomsForm19DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@Incoterms", field.Incoterms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentType", field.FTADocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTAID", field.FTAID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentDesc", field.FTADocumentDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeAgencyName", field.SchemeAgencyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2ID", field.CustomsForm2ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2DocumentType", field.CustomsForm2DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesID", field.OtherChargesID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesChargeIndicator", field.OtherChargesChargeIndicator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAmount", field.OtherChargesAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAllowanceChargeReason", field.OtherChargesAllowanceChargeReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NotificationTemplateId", field.NotificationTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SMSTemplateId", field.SMSTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@OutputFormat", field.OutputFormat, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceIRBMUniqueNo", field.OriginalInvoiceIRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceNumber", field.OriginalInvoiceNumber, SqlDbType.NVarChar)
            };
            return parameters;
        }
        async Task<InvoiceLineItems> IETLService.InsertSBDebitNotelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertSBDebitNotelineData service called.");
                Console.WriteLine("InsertSBDebitNotelineData service called.");

                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[SBDebitNoteLineItems] (
                        [SBDebitNoteId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [CbcItemClassificationCode],
                        [CbcProductTariffClass],
                        [CbcTaxSchemeID],
                        [CbcTaxSchemeAgencyID],
                        [CbcTaxSchemeAgencyCode],
                        [CbcInvoiceLineNetAmount],
                        [CbcNetAmount],
                        [ProductId],
                        [CbcItemClassificationClass],
                        [CbcProductTariffCode],
                        [CbcSubtotal],
                        [CbcSSTTaxCategory],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @SBDebitNoteId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @CbcItemClassificationCode,
                        @CbcProductTariffClass,
                        @CbcTaxSchemeID,
                        @CbcTaxSchemeAgencyID,
                        @CbcTaxSchemeAgencyCode,
                        @CbcInvoiceLineNetAmount,
                        @CbcNetAmount,
                        @ProductId,
                        @CbcItemClassificationClass,
                        @CbcProductTariffCode,
                        @CbcSubtotal,
                        @CbcSSTTaxCategory,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBDebitnNoteLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.CreditNoteId} Invoicenumber");
                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBDebitNotelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBDebitNotelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBDebitnNoteLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@SBDebitNoteId", field.SBDebitNoteId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationCode", field.CbcItemClassificationCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffClass", field.CbcProductTariffClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeID", field.CbcTaxSchemeID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyID", field.CbcTaxSchemeAgencyID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcInvoiceLineNetAmount", field.CbcInvoiceLineNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcNetAmount", field.CbcNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@ProductId", field.ProductId, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationClass", field.CbcItemClassificationClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffCode", field.CbcProductTariffCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSubtotal", field.CbcSubtotal, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSSTTaxCategory", field.CbcSSTTaxCategory, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }
        async Task<DocTaxSubTotal> IETLService.InsertSBDebitNoteTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertSBDebitNoteDocTaxSubTotal service called.");
                Console.WriteLine("InsertDebitNoteDocTaxSubTotal service called.");
                const string sql = @"
                        INSERT INTO [dbo].[SBDebitNoteTaxSubTotal] (
                            [SBDebitNoteId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [SBDebitNoteLineItemId],
                            [CategoryTaxSchemeId],
                            [AmountExemptedFromTax],
                            [CbcTaxSchemeAgencyId],
                            [CbcTaxSchemeAgencyCode]
                        ) 
                        VALUES (
                            @SBDebitNoteId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @SBDebitNoteLineItemId,
                            @CategoryTaxSchemeId,
                            @AmountExemptedFromTax,
                            @CbcTaxSchemeAgencyId,
                            @CbcTaxSchemeAgencyCode
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBDebitNoteTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"SBDebitNoteDocTaxSubTotalDataTake Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"SBDebitNoteDocTaxSubTotalDataTake of {docTaxSubTotal.InvoiceId} Invoicenumber");

                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBDebitNoteDocTaxSubTotal service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBDebitNoteDocTaxSubTotal service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBDebitNoteTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@DocumentSubTotalId", field.DocumentSubTotalId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@SBDebitNoteId", field.SBDebitNoteId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SBDebitNoteLineItemId", field.SBDebitNoteLineItemId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CategoryTaxSchemeId", field.CategoryTaxSchemeId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@AmountExemptedFromTax", field.AmountExemptedFromTax, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyId", field.CbcTaxSchemeAgencyId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar)
            };
            return parameters;
        }
        #endregion SBDebitNoteData
        #region SBRefundNoteData
        async Task<InvoiceData> IETLService.InsertSBRefundNoteData(InvoiceData invoiceData)
        {
            try
            {
                Log.Information("InsertSBRefundNoteData service called.");
                Console.WriteLine("InsertSBRefundNoteData service called.");
                const string sql = @"INSERT [dbo].[SBRefundNoteData] (
                        [cbcAmount],
                        [cacAddress],
                        [cacInvoicePeriod],
                        [cacPostalSellerAddress],
                        [cacPostalBuyerAddress],
                        [cacPrice],
                        [cacTaxTotal],
                        [cbcBaseAmount],
                        [cbcBaseQuantity],
                        [cbcBuyerReference],
                        [cbcSellerCompanyID],
                        [cbcBuyerCompanyID],
                        [cbcSellerVATID],
                        [cbcBuyerVATID],
                        [cbcCompanyLegalForm],
                        [cbcDescription],
                        [cbcDescriptionCode] ,
                        [cbcDocumentCurrencyCode] ,
                        [cbcSellerElectronicMail] ,
                        [cbcBuyerElectronicMail] ,
                        [cbcIDInvoiceNumber] ,
                        [cbcPrecedingInvoicenumber] ,
                        [cbcIDPaymentAccountIdentifier] ,
                        [cbcIDVATcategoryCode] ,
                        [cbcIDItemCountryOfOrigin] ,
                        [cbcIdentificationCode] ,
                        [cbcInvoiceTypeCode] ,
                        [cbcIssueDate] ,
                        [cbcLineExtensionAmount] ,
                        [cbcSellerName] ,
                        [cbcBuyerName] ,
                        [cbcNameDeliverToPartyName] ,
                        [cbcNote] ,
                        [cbcPayableAmount] ,
                        [cbcPaymentID] ,
                        [cbcPercent] ,
                        [cbcSellerRegnName] ,
                        [cbcBuyerRegnName] ,
                        [cbcTaxableAmount] ,
                        [cbcTaxCurrencyCode] ,
                        [cbcTaxExclusiveAmount] ,
                        [cbcTaxExemptionReason] ,
                        [cbcTaxInclusiveAmount] ,
                        [cbcTaxPointDate] ,
                        [cbcSellerTelephone] ,
                        [cbcBuyerTelephone] ,
                        [NamePaymentMeansText] ,
                        [schemeID] ,
                        [unitCode] ,
                        [IRBMUniqueNo] ,
                        [PaymentDueDate] ,
                        [cbcPaymentCurrencyCode] ,
                        [cbcBusinessActivityDesc] ,
                        [cbcMSICCode] ,
                        [TotalLineAmount] ,
                        [TotalChangeAmount] ,
                        [TotalAllowanceAmount] ,
                        [TotalTaxAmount] ,
                        [PayableRoundingAmount] ,
                        [PrePaidAmount] ,
                        [TotalAmountDue] ,
                        [mode] ,
                        [eInvoiceType] ,
                        [eTemplateId] ,
                        [templateId] ,
                        [Status] ,
                        [EInvoiceDateTime] ,
                        [invoiceValidator] ,
                        [taxOfficeSubmitter] ,
                        [WorkflowStatus] ,
                        [comments] ,
                        [bulkGuid],
                        [ApprovalType] ,
                        [LastDraftSaveDate] ,
                        [PendingProcessingDate] ,
                        [Checker1ActionDate] ,
                        [Checker2ActionDate] ,
                     
                        [SubmittedToIRBDate] ,
                        [IRBResponseDate] ,
                        [BuyerSentDate] ,
                        [PDFBlob] ,
                        [PDFXml] ,
                        [Priority] ,
                        [CreatedDate] ,
                        [CreatedBy] ,
                        [UpdatedDate] ,
                        [UpdatedBy] ,
                        [PDFWithQRBlob] ,
                        [XMLWithQRBlob] ,
                        [JsonInvoiceBlob] ,
                        [JsonWithQRBlob] ,
                        [cacAddress2] ,
                        [cacAddress3] ,
                        [cacAddress4] ,
                        [cacSellerEmail] ,
                        [reltedInvoiceId] ,
                        [eInvoiceNumber],
                        [taxofficeschedulerid] ,
                        [InvoiceVersion] ,
                        [cbcSellerSSTRegistrationNumber] ,
                        [cbcSellerTourismTaxRegistrationNumber] ,
                        [cbcSStreetName] ,
                        [cbcSAdditionalStreetName1] ,
                        [cbcSAdditionalStreetName2] ,
                        [cbcSPostalZone] ,
                        [cbcSCityName] ,
                        [cbcSCountrySubentity] ,
                        [cbcSCountryIdentificationCode] ,
                        [cbcBStreetName] ,
                        [cbcBAdditionalStreetName1] ,
                        [cbcBAdditionalStreetName2] ,
                        [cbcBPostalZone] ,
                        [cbcBCityName] ,
                        [cbcBCountrySubentity] ,
                        [cbcBCountryIdentificationCode] ,
                        [cbcBSSTRegistrationNumber] ,
                        [cbcDStreetName] ,
                        [cbcDAdditionalStreetName1] ,
                        [cbcDAdditionalStreetName2] ,
                        [cbcDPostalZone] ,
                        [cbcDCityName] ,
                        [cbcDCountrySubentity] ,
                        [cbcDCountryIdentificationCode] ,
                        [cbcShipRecipientName] ,
                        [cbcShipRecipientVATID] ,
                        [cbcShipRecipientCompanyID] ,
                        [cbcShipRecipientStreetName] ,
                        [cbcShipRecipientAdditionalStreetName1] ,
                        [cbcShipRecipientAdditionalStreetName2] ,
                        [cbcShipRecipientPostalZone] ,
                        [cbcShipRecipientCityName] ,
                        [cbcShipRecipientCountrySubentity] ,
                        [cbcShipRecipientCountryIdentificationCode] ,
                        [cbcCalculationRate] ,
                        [cbcStartDate] ,
                        [cbcEndDate] ,
                        [cbcSCategory] ,
                        [cbcSSubCategory] ,
                        [cbcSBRNNumber] ,
                        [cbcSNRIC] ,
                        [cbcBCategory] ,
                        [cbcBSubCategory] ,
                        [cbcBBRNNumber] ,
                        [cbcBNRIC] ,
                        [cbcShipRecipientCategory] ,
                        [cbcShipRecipientSubCategory] ,
                        [cbcShipRecipientBRNNumber] ,
                        [cbcShipRecipientNRIC] ,
                        [cacPaymentTerms],
                        [cbcPaidDate] ,
                        [cbcPaidTime] ,
                        [cbcPaidId] ,
                        [cbcItemClassificationCodeClass] ,
                        [cbcItemClassificationCodePTC] ,
                        [cbcSourceInvoiceNumber] ,
                        [workFlowOption],
                        [RejectRequestDateTime] ,
                        [RejectionStatusReason] ,
                        [CancelDateTime] ,
                        [CancelStatusReason] ,
                        [CancelledsubmıttedID] ,
                        [IRBMUniqueIdentifierNumber] ,
                        [InvoiceDocumentReferenceNumber] ,
                        [cbcCustomizationID] ,
                        [cbcProfileID] ,
                        [cbcDueDate] ,
                        [cbcAccountingCost] ,
                        [cbcOrderReferenceId] ,
                        [cbcSalesOrderID] ,
                        [cbcEndpointId] ,
                        [cbcEndpointIdschemeID] ,
                        [cbcPartyTaxSchemeCompanyID] ,
                        [cbcPartyTaxSchemeID] ,
                        [cbcPartyLegalEntityCompanyID] ,
                        [cbcPartyLegalEntityCompanyLegalForm] ,
                        [cbcBuyerEndpointId] ,
                        [cbcBuyerEndpointIdschemeID] ,
                        [cbcBuyerPartyTaxSchemeCompanyID] ,
                        [cbcBuyerPartyTaxSchemeID] ,
                        [cbcBuyerPartyLegalEntityCompanyID] ,
                        [cbcBuyerPartyLegalEntityCompanyLegalForm] ,
                        [cbcActualDeliveryDate] ,
                        [cbcDeliveryLocationId] ,
                        [cbcDeliveryStreetName] ,
                        [cbcDeliveryAdditionalStreetName] ,
                        [cbcDeliveryCityName] ,
                        [cbcDeliveryPostalZone] ,
                        [cbcDeliveryAddressLine] ,
                        [cbcDeliveryCountryIdentificationCode] ,
                        [cacDeliveryPartyName] ,
                        [cbcIRBMValidationDate] ,
                        [billerId] ,
                        [ValidationDate] ,
                        [ValidityHours] ,
                        [InvoiceDocumentReference] ,
                        [QRCode] ,
                        [IRBMValidationDate] ,
                        [ValidityEndDateTime] ,
                        [IRBMValidationTime] ,
                        [RemainingHours] ,
                        [SourceFileName] ,
                        [SourceName] ,
                        [FıleName] ,
                        [DataTıme] ,
                        [FolderName],
                        [InvoıceCreatorName] ,
                        [SourceInvoıceNumber] ,
                        [InvoıceNumberStatus] ,
                        [ProcessType] ,
                        [WorkflowType] ,
                        [SchedulerName] ,
                        [TaskID] ,
                        [CreationDateTıme] ,
                        [CreatorID] ,
                        [CreationNotes] ,
                        [CreationSubmissionDateTime] ,
                        [CreationApprovalDateTıme] ,
                        [CreationApprovalID] ,
                        [CreationApprovalNotes] ,
                        [CreationApprovalStatus] ,
                        [VerifıcationApprovalDateTıme] ,
                        [CreationApproverlID] ,
                        [VerificationApprovalID] ,
                        [VerificationApproverlID] ,
                        [VerificationApprovalNotes] ,
                        [GenerationApprovalID] ,
                        [GenerationApproverlID] ,
                        [GenerationApprovalNotes] ,
                        [GenerationApprovalStatus] ,
                        [GenerationApprovalDateTıme] ,
                        [ValidationApprovalID] ,
                        [ValidationApproverlID] ,
                        [ValidationApprovalNotes] ,
                        [ValidationApprovalStatus] ,
                        [ValidationApprovalDateTıme] ,
                        [SubmissionDateTıme] ,
                        [SubmitterID] ,
                        [SubmissionNotes] ,
                        [SubmissionApprovalDateTıme] ,
                        [SubmissionApprovalSubmıtDateTıme] ,
                        [SubmissionApprovalID] ,
                        [SubmissionApprovalNotes] ,
                        [SubmissionApprovalStatus] ,
                        [RetryCount] ,
                        [ValidityEndDateTıme] ,
                        [ValidityStatus] ,
                        [RejectionDateTıme] ,
                        [RejectionReasons] ,
                        [RejectionWFCheckerID] ,
                        [RejectionWFCheckerStatus] ,
                        [RejectionWFCheckerSubmitDateTıme] ,
                        [RejectionWFApproverID] ,
                        [RejectionWFApprovalStatus] ,
                        [RejectionWFApprovalNotes] ,
                        [RejectionWFApprovalSubmitDateTıme] ,
                        [CancellationDateTıme] ,
                        [CancellationReasons] ,
                        [CancellationWFCheckerID] ,
                        [CancellationWFCheckerStatus] ,
                        [CancellationWFCheckerSubmıtDateTıme] ,
                        [CancellationWFApproverID] ,
                        [CancellationWFApprovalStatus] ,
                        [CancellationWFApprovalNotes] ,
                        [CancellationWFApprovalSubmıtDateTıme] ,
                        [ETLJobName] ,
                        [cbcPricingCurrencyCode] ,
                        [cbcCurrencyExchangeRate] ,
                        [cbcFrequencyofBilling] ,
                        [cbcBillingPeriodStartDate] ,
                        [cbcBillingPeriodEndDate] ,
                        [PaymentMode] ,
                        [cbcSupplierBankAccountNumber] ,
                        [cbcBillReferenceNumber] ,
                        [SourceCalculationMode] ,
                        [EtlCalculationMode] ,
                        [İnvoiceFactorycalcutionMode] ,
                        [cbcTaxRate] ,
                        [cbcTaxCategory] ,
                        [validationlink] ,
                        [CustomsForm19ID] ,
                        [CustomsForm19DocumentType] ,
                        [Incoterms] ,
                        [FTADocumentType] ,
                        [FTAID] ,
                        [FTADocumentDesc] ,
                        [schemeAgencyName] ,
                        [CustomsForm2ID] ,
                        [CustomsForm2DocumentType] ,
                        [OtherChargesID] ,
                        [OtherChargesChargeIndicator] ,
                        [OtherChargesAmount] ,
                        [OtherChargesAllowanceChargeReason] ,
                        [NotificationTemplateId] ,
                        [SMSTemplateId] ,
                        [OutputFormat],
                        [OriginalInvoiceIRBMUniqueNo] ,
                        [OriginalInvoiceNumber]
                        )
                    OUTPUT Inserted.Id
                    VALUES (
                        @cbcAmount,
                        @cacAddress,
                        @cacInvoicePeriod,
                        @cacPostalSellerAddress,
                        @cacPostalBuyerAddress,
                        @cacPrice,
                        @cacTaxTotal,
                        @cbcBaseAmount,
                        @cbcBaseQuantity,
                        @cbcBuyerReference,
                        @cbcSellerCompanyID,
                        @cbcBuyerCompanyID,
                        @cbcSellerVATID,
                        @cbcBuyerVATID,
                        @cbcCompanyLegalForm,
                        @cbcDescription,
                        @cbcDescriptionCode ,
                        @cbcDocumentCurrencyCode ,
                        @cbcSellerElectronicMail ,
                        @cbcBuyerElectronicMail ,
                        @cbcIDInvoiceNumber ,
                        @cbcPrecedingInvoicenumber ,
                        @cbcIDPaymentAccountIdentifier ,
                        @cbcIDVATcategoryCode ,
                        @cbcIDItemCountryOfOrigin ,
                        @cbcIdentificationCode ,
                        @cbcInvoiceTypeCode ,
                        @cbcIssueDate ,
                        @cbcLineExtensionAmount ,
                        @cbcSellerName ,
                        @cbcBuyerName ,
                        @cbcNameDeliverToPartyName ,
                        @cbcNote ,
                        @cbcPayableAmount ,
                        @cbcPaymentID ,
                        @cbcPercent ,
                        @cbcSellerRegnName ,
                        @cbcBuyerRegnName ,
                        @cbcTaxableAmount ,
                        @cbcTaxCurrencyCode ,
                        @cbcTaxExclusiveAmount ,
                        @cbcTaxExemptionReason ,
                        @cbcTaxInclusiveAmount ,
                        @cbcTaxPointDate ,
                        @cbcSellerTelephone ,
                        @cbcBuyerTelephone ,
                        @NamePaymentMeansText ,
                        @schemeID ,
                        @unitCode ,
                        @IRBMUniqueNo ,
                        @PaymentDueDate ,
                        @cbcPaymentCurrencyCode ,
                        @cbcBusinessActivityDesc ,
                        @cbcMSICCode ,
                        @TotalLineAmount ,
                        @TotalChangeAmount ,
                        @TotalAllowanceAmount ,
                        @TotalTaxAmount ,
                        @PayableRoundingAmount ,
                        @PrePaidAmount ,
                        @TotalAmountDue ,
                        @mode ,
                        @eInvoiceType ,
                        @eTemplateId ,
                        @templateId ,
                        @Status ,
                        @EInvoiceDateTime ,
                        @invoiceValidator ,
                        @taxOfficeSubmitter ,
                        @WorkflowStatus ,
                        @comments ,
                        @bulkGuid,
                        @ApprovalType ,
                        @LastDraftSaveDate ,
                        @PendingProcessingDate ,
                        @Checker1ActionDate ,
                        @Checker2ActionDate ,
  
                        @SubmittedToIRBDate ,
                        @IRBResponseDate ,
                        @BuyerSentDate ,
                        @PDFBlob ,
                        @PDFXml ,
                        @Priority ,
                        @CreatedDate ,
                        @CreatedBy ,
                        @UpdatedDate ,
                        @UpdatedBy ,
                        @PDFWithQRBlob ,
                        @XMLWithQRBlob ,
                        @JsonInvoiceBlob ,
                        @JsonWithQRBlob ,
                        @cacAddress2 ,
                        @cacAddress3 ,
                        @cacAddress4 ,
                        @cacSellerEmail ,
                        @reltedInvoiceId ,
                        @eInvoiceNumber ,
                        @taxofficeschedulerid ,
                        @InvoiceVersion ,
                        @cbcSellerSSTRegistrationNumber ,
                        @cbcSellerTourismTaxRegistrationNumber ,
                        @cbcSStreetName ,
                        @cbcSAdditionalStreetName1 ,
                        @cbcSAdditionalStreetName2 ,
                        @cbcSPostalZone ,
                        @cbcSCityName ,
                        @cbcSCountrySubentity ,
                        @cbcSCountryIdentificationCode ,
                        @cbcBStreetName ,
                        @cbcBAdditionalStreetName1 ,
                        @cbcBAdditionalStreetName2 ,
                        @cbcBPostalZone ,
                        @cbcBCityName ,
                        @cbcBCountrySubentity ,
                        @cbcBCountryIdentificationCode ,
                        @cbcBSSTRegistrationNumber ,
                        @cbcDStreetName ,
                        @cbcDAdditionalStreetName1 ,
                        @cbcDAdditionalStreetName2 ,
                        @cbcDPostalZone ,
                        @cbcDCityName ,
                        @cbcDCountrySubentity ,
                        @cbcDCountryIdentificationCode ,
                        @cbcShipRecipientName ,
                        @cbcShipRecipientVATID ,
                        @cbcShipRecipientCompanyID ,
                        @cbcShipRecipientStreetName ,
                        @cbcShipRecipientAdditionalStreetName1 ,
                        @cbcShipRecipientAdditionalStreetName2 ,
                        @cbcShipRecipientPostalZone ,
                        @cbcShipRecipientCityName ,
                        @cbcShipRecipientCountrySubentity ,
                        @cbcShipRecipientCountryIdentificationCode ,
                        @cbcCalculationRate ,
                        @cbcStartDate ,
                        @cbcEndDate ,
                        @cbcSCategory ,
                        @cbcSSubCategory ,
                        @cbcSBRNNumber ,
                        @cbcSNRIC ,
                        @cbcBCategory ,
                        @cbcBSubCategory ,
                        @cbcBBRNNumber ,
                        @cbcBNRIC ,
                        @cbcShipRecipientCategory ,
                        @cbcShipRecipientSubCategory ,
                        @cbcShipRecipientBRNNumber ,
                        @cbcShipRecipientNRIC ,
                        @cacPaymentTerms ,
                        @cbcPaidDate ,
                        @cbcPaidTime ,
                        @cbcPaidId ,
                        @cbcItemClassificationCodeClass ,
                        @cbcItemClassificationCodePTC ,
                        @cbcSourceInvoiceNumber ,
                        @workFlowOption,
                        @RejectRequestDateTime ,
                        @RejectionStatusReason ,
                        @CancelDateTime ,
                        @CancelStatusReason ,
                        @CancelledsubmıttedID ,
                        @IRBMUniqueIdentifierNumber ,
                        @InvoiceDocumentReferenceNumber ,
                        @cbcCustomizationID ,
                        @cbcProfileID ,
                        @cbcDueDate ,
                        @cbcAccountingCost ,
                        @cbcOrderReferenceId ,
                        @cbcSalesOrderID ,
                        @cbcEndpointId ,
                        @cbcEndpointIdschemeID ,
                        @cbcPartyTaxSchemeCompanyID ,
                        @cbcPartyTaxSchemeID ,
                        @cbcPartyLegalEntityCompanyID ,
                        @cbcPartyLegalEntityCompanyLegalForm ,
                        @cbcBuyerEndpointId ,
                        @cbcBuyerEndpointIdschemeID ,
                        @cbcBuyerPartyTaxSchemeCompanyID ,
                        @cbcBuyerPartyTaxSchemeID ,
                        @cbcBuyerPartyLegalEntityCompanyID ,
                        @cbcBuyerPartyLegalEntityCompanyLegalForm ,
                        @cbcActualDeliveryDate ,
                        @cbcDeliveryLocationId ,
                        @cbcDeliveryStreetName ,
                        @cbcDeliveryAdditionalStreetName ,
                        @cbcDeliveryCityName ,
                        @cbcDeliveryPostalZone ,
                        @cbcDeliveryAddressLine ,
                        @cbcDeliveryCountryIdentificationCode ,
                        @cacDeliveryPartyName ,
                        @cbcIRBMValidationDate ,
                        @billerId ,
                        @ValidationDate ,
                        @ValidityHours ,
                        @InvoiceDocumentReference ,
                        @QRCode ,
                        @IRBMValidationDate ,
                        @ValidityEndDateTime ,
                        @IRBMValidationTime ,
                        @RemainingHours ,
                        @SourceFileName ,
                        @SourceName ,
                        @FıleName ,
                        @DataTıme ,
                        @FolderName,
                        @InvoıceCreatorName ,
                        @SourceInvoıceNumber ,
                        @InvoıceNumberStatus ,
                        @ProcessType ,
                        @WorkflowType ,
                        @SchedulerName ,
                        @TaskID ,
                        @CreationDateTıme ,
                        @CreatorID ,
                        @CreationNotes ,
                        @CreationSubmissionDateTime ,
                        @CreationApprovalDateTıme ,
                        @CreationApprovalID ,
                        @CreationApprovalNotes ,
                        @CreationApprovalStatus ,
                        @VerifıcationApprovalDateTıme ,
                        @CreationApproverlID ,
                        @VerificationApprovalID ,
                        @VerificationApproverlID ,
                        @VerificationApprovalNotes ,
                        @GenerationApprovalID ,
                        @GenerationApproverlID ,
                        @GenerationApprovalNotes ,
                        @GenerationApprovalStatus ,
                        @GenerationApprovalDateTıme ,
                        @ValidationApprovalID ,
                        @ValidationApproverlID ,
                        @ValidationApprovalNotes ,
                        @ValidationApprovalStatus ,
                        @ValidationApprovalDateTıme ,
                        @SubmissionDateTıme ,
                        @SubmitterID ,
                        @SubmissionNotes ,
                        @SubmissionApprovalDateTıme ,
                        @SubmissionApprovalSubmıtDateTıme ,
                        @SubmissionApprovalID ,
                        @SubmissionApprovalNotes ,
                        @SubmissionApprovalStatus ,
                        @RetryCount ,
                        @ValidityEndDateTıme ,
                        @ValidityStatus ,
                        @RejectionDateTıme ,
                        @RejectionReasons ,
                        @RejectionWFCheckerID ,
                        @RejectionWFCheckerStatus ,
                        @RejectionWFCheckerSubmitDateTıme ,
                        @RejectionWFApproverID ,
                        @RejectionWFApprovalStatus ,
                        @RejectionWFApprovalNotes ,
                        @RejectionWFApprovalSubmitDateTıme ,
                        @CancellationDateTıme ,
                        @CancellationReasons ,
                        @CancellationWFCheckerID ,
                        @CancellationWFCheckerStatus ,
                        @CancellationWFCheckerSubmıtDateTıme ,
                        @CancellationWFApproverID ,
                        @CancellationWFApprovalStatus ,
                        @CancellationWFApprovalNotes ,
                        @CancellationWFApprovalSubmıtDateTıme ,
                        @ETLJobName ,
                        @cbcPricingCurrencyCode ,
                        @cbcCurrencyExchangeRate ,
                        @cbcFrequencyofBilling ,
                        @cbcBillingPeriodStartDate ,
                        @cbcBillingPeriodEndDate ,
                        @PaymentMode ,
                        @cbcSupplierBankAccountNumber ,
                        @cbcBillReferenceNumber ,
                        @SourceCalculationMode ,
                        @EtlCalculationMode ,
                        @İnvoiceFactorycalcutionMode ,
                        @cbcTaxRate ,
                        @cbcTaxCategory ,
                        @validationlink ,
                        @CustomsForm19ID ,
                        @CustomsForm19DocumentType ,
                        @Incoterms ,
                        @FTADocumentType ,
                        @FTAID ,
                        @FTADocumentDesc ,
                        @schemeAgencyName ,
                        @CustomsForm2ID ,
                        @CustomsForm2DocumentType ,
                        @OtherChargesID ,
                        @OtherChargesChargeIndicator ,
                        @OtherChargesAmount ,
                        @OtherChargesAllowanceChargeReason ,
                        @NotificationTemplateId ,
                        @SMSTemplateId ,
                        @OutputFormat,
                        @OriginalInvoiceIRBMUniqueNo ,
                        @OriginalInvoiceNumber)";

                var id = await _queryHelper.ExecuteScalar(sql, InsertSBRefundNoteDataTake(invoiceData));
                invoiceData.Id = int.Parse(id.ToString());
                Log.Information($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                Console.WriteLine($"{invoiceData.EInvoiceNumber} Invoice Number Inserted");
                return invoiceData;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBRefundNoteData service.{ex.Message}");
                Console.WriteLine($"Exception in InsertSBRefundNoteData service.{ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBRefundNoteDataTake(InvoiceData field)
        {
            var parameters = new List<IDataParameter>
            {
            QueryHelper.CreateSqlParameter("@Id", field.Id, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcAmount", field.CbcAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress", field.CacAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacInvoicePeriod", field.CacInvoicePeriod, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalSellerAddress", field.CacPostalSellerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPostalBuyerAddress", field.CacPostalBuyerAddress, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPrice", field.CacPrice, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacTaxTotal", field.CacTaxTotal, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerReference", field.CbcBuyerReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerCompanyID", field.CbcSellerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerCompanyID", field.CbcBuyerCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerVATID", field.CbcSellerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerVATID", field.CbcBuyerVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCompanyLegalForm", field.CbcCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescription", field.CbcDescription, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDocumentCurrencyCode", field.CbcDocumentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerElectronicMail", field.CbcSellerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerElectronicMail", field.CbcBuyerElectronicMail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDInvoiceNumber", field.CbcIDInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPrecedingInvoicenumber", field.CbcPrecedingInvoicenumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDPaymentAccountIdentifier", field.CbcIDPaymentAccountIdentifier, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDVATcategoryCode", field.CbcIDVATcategoryCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIdentificationCode", field.CbcIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcInvoiceTypeCode", field.CbcInvoiceTypeCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIssueDate", field.CbcIssueDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcLineExtensionAmount", field.CbcLineExtensionAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerName", field.CbcSellerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerName", field.CbcBuyerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNameDeliverToPartyName", field.CbcNameDeliverToPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcNote", field.CbcNote, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPayableAmount", field.CbcPayableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaymentID", field.CbcPaymentID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPercent", field.CbcPercent, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerRegnName", field.CbcSellerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerRegnName", field.CbcBuyerRegnName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxableAmount", field.CbcTaxableAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCurrencyCode", field.CbcTaxCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExclusiveAmount", field.CbcTaxExclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxExemptionReason", field.CbcTaxExemptionReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxInclusiveAmount", field.CbcTaxInclusiveAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxPointDate", field.CbcTaxPointDate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTelephone", field.CbcSellerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerTelephone", field.CbcBuyerTelephone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NamePaymentMeansText", field.NamePaymentMeansText, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeID", field.SchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@unitCode", field.UnitCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueNo", field.IRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PaymentDueDate", field.PaymentDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaymentCurrencyCode", field.CbcPaymentCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBusinessActivityDesc", field.CbcBusinessActivityDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcMSICCode", field.CbcMsicCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalLineAmount", field.TotalLineAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalChangeAmount", field.TotalChangeAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAllowanceAmount", field.TotalAllowanceAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalTaxAmount", field.TotalTaxAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PayableRoundingAmount", field.PayableRoundingAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PrePaidAmount", field.PrePaidAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TotalAmountDue", field.TotalAmountDue, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@mode", field.Mode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eInvoiceType", field.EInvoiceType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@eTemplateId", field.eTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@templateId", field.templateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@Status", field.Status, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@EInvoiceDateTime", field.EInvoiceDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@invoiceValidator", field.invoiceValidator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxOfficeSubmitter", field.TaxOfficeSubmitter, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowStatus", field.WorkflowStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@comments", field.Comments, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@bulkGuid", field.BulkGuid, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ApprovalType", field.ApprovalType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@LastDraftSaveDate", field.LastDraftSaveDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PendingProcessingDate", field.PendingProcessingDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker1ActionDate", field.Checker1ActionDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@Checker2ActionDate", field.Checker2ActionDate, SqlDbType.DateTime),
            //QueryHelper.CreateSqlParameter("@Checke2ActionTime", field.Checke2ActionTime, SqlDbType.DateTime2),
            QueryHelper.CreateSqlParameter("@SubmittedToIRBDate", field.SubmittedToIRBDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBResponseDate", field.IRBResponseDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@BuyerSentDate", field.BuyerSentDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PDFBlob", field.PdfBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@PDFXml", field.PdfXml, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@Priority", field.Priority, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@PDFWithQRBlob", field.PdfWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@XMLWithQRBlob", field.XmlWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonInvoiceBlob", field.JsonInvoiceBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@JsonWithQRBlob", field.JsonWithQRBlob, SqlDbType.VarBinary),
            QueryHelper.CreateSqlParameter("@cacAddress2", field.CacAddress2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress3", field.CacAddress3, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacAddress4", field.CacAddress4, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacSellerEmail", field.CacSellerEmail, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@reltedInvoiceId", field.ReltedInvoiceId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@eInvoiceNumber", field.EInvoiceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@taxofficeschedulerid", field.TaxOfficeSchedulerId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@InvoiceVersion", field.InvoiceVersion, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerSSTRegistrationNumber", field.CbcSellerSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSellerTourismTaxRegistrationNumber", field.CbcSellerTourismTaxRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSStreetName", field.CbcSStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName1", field.CbcSAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSAdditionalStreetName2", field.CbcSAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSPostalZone", field.CbcSPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCityName", field.CbcSCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountrySubentity", field.CbcSCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSCountryIdentificationCode", field.CbcSCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBStreetName", field.CbcBStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName1", field.CbcBAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBAdditionalStreetName2", field.CbcBAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBPostalZone", field.CbcBPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCityName", field.CbcBCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountrySubentity", field.CbcBCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCountryIdentificationCode", field.CbcBCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSSTRegistrationNumber", field.CbcBSSTRegistrationNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDStreetName", field.CbcDStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName1", field.CbcDAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDAdditionalStreetName2", field.CbcDAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDPostalZone", field.CbcDPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCityName", field.CbcDCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountrySubentity", field.CbcDCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDCountryIdentificationCode", field.CbcDCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientName", field.CbcShipRecipientName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientVATID", field.CbcShipRecipientVATID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCompanyID", field.CbcShipRecipientCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientStreetName", field.CbcShipRecipientStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName1", field.CbcShipRecipientAdditionalStreetName1, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientAdditionalStreetName2", field.CbcShipRecipientAdditionalStreetName2, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientPostalZone", field.CbcShipRecipientPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCityName", field.CbcShipRecipientCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountrySubentity", field.CbcShipRecipientCountrySubentity, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCountryIdentificationCode", field.CbcShipRecipientCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCalculationRate", field.CbcCalculationRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcStartDate", field.CbcStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcEndDate", field.CbcEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcSCategory", field.CbcSCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSSubCategory", field.CbcSSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSBRNNumber", field.CbcSBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSNRIC", field.CbcSNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBCategory", field.CbcBCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBSubCategory", field.CbcBSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBBRNNumber", field.CbcBBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBNRIC", field.CbcBNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientCategory", field.CbcShipRecipientCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientSubCategory", field.CbcShipRecipientSubCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientBRNNumber", field.CbcShipRecipientBRNNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcShipRecipientNRIC", field.CbcShipRecipientNRIC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacPaymentTerms", field.CacPaymentTerms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidDate", field.CbcPaidDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcPaidTime", field.CbcPaidTime, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPaidId", field.CbcPaidId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodeClass", field.CbcItemClassificationCodeClass, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcItemClassificationCodePTC", field.CbcItemClassificationCodePTC, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSourceInvoiceNumber", field.CbcSourceInvoiceNumber, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@workFlowOption", field.WorkFlowOption, SqlDbType.VarChar),
            QueryHelper.CreateSqlParameter("@RejectRequestDateTime", field.RejectRequestDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionStatusReason", field.RejectionStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelDateTime", field.CancelDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancelStatusReason", field.CancelStatusReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancelledsubmıttedID", field.CancelledsubmıttedID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMUniqueIdentifierNumber", field.IRBMUniqueIdentifierNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReferenceNumber", field.InvoiceDocumentReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCustomizationID", field.CbcCustomizationID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcProfileID", field.CbcProfileID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDueDate", field.CbcDueDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcAccountingCost", field.CbcAccountingCost, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcOrderReferenceId", field.CbcOrderReferenceId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSalesOrderID", field.CbcSalesOrderID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointId", field.CbcEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcEndpointIdschemeID", field.CbcEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeCompanyID", field.CbcPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyTaxSchemeID", field.CbcPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyID", field.CbcPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPartyLegalEntityCompanyLegalForm", field.CbcPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointId", field.CbcBuyerEndpointId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerEndpointIdschemeID", field.CbcBuyerEndpointIdschemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeCompanyID", field.CbcBuyerPartyTaxSchemeCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyTaxSchemeID", field.CbcBuyerPartyTaxSchemeID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyID", field.CbcBuyerPartyLegalEntityCompanyID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBuyerPartyLegalEntityCompanyLegalForm", field.CbcBuyerPartyLegalEntityCompanyLegalForm, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcActualDeliveryDate", field.CbcActualDeliveryDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcDeliveryLocationId", field.CbcDeliveryLocationId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryStreetName", field.CbcDeliveryStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAdditionalStreetName", field.CbcDeliveryAdditionalStreetName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCityName", field.CbcDeliveryCityName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryPostalZone", field.CbcDeliveryPostalZone, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryAddressLine", field.CbcDeliveryAddressLine, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcDeliveryCountryIdentificationCode", field.CbcDeliveryCountryIdentificationCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cacDeliveryPartyName", field.CacDeliveryPartyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcIRBMValidationDate", field.CbcIRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@billerId", field.BillerId, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationDate", field.ValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityHours", field.ValidityHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", field.InvoiceDocumentReference, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@QRCode", field.QRCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@IRBMValidationDate", field.IRBMValidationDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTıme", field.ValidityEndDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@IRBMValidationTime", field.IRBMValidationTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RemainingHours", field.RemainingHours, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceFileName", field.SourceFileName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceName", field.SourceName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FıleName", field.FıleName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@DataTıme", field.DataTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@FolderName", field.FolderName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceCreatorName", field.InvoıceCreatorName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceInvoıceNumber", field.SourceInvoıceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@InvoıceNumberStatus", field.InvoıceNumberStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ProcessType", field.ProcessType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@WorkflowType", field.WorkflowType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SchedulerName", field.SchedulerName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@TaskID", field.TaskID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationDateTıme", field.CreationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreatorID", field.CreatorID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationNotes", field.CreationNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationSubmissionDateTime", field.CreationSubmissionDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalDateTıme", field.CreationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApprovalID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CreationApprovalNotes", field.CreationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CreationApprovalStatus", field.CreationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@VerifıcationApprovalDateTıme", field.VerifıcationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CreationApproverlID", field.CreationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApproverlID", field.VerificationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@VerificationApprovalNotes", field.VerificationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalID", field.GenerationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApproverlID", field.GenerationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@GenerationApprovalNotes", field.GenerationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalStatus", field.GenerationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@GenerationApprovalDateTıme", field.GenerationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidationApprovalID", field.ValidationApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApproverlID", field.ValidationApproverlID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidationApprovalNotes", field.ValidationApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalStatus", field.ValidationApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@ValidationApprovalDateTıme", field.ValidationApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionDateTıme", field.SubmissionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmitterID", field.SubmitterID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionNotes", field.SubmissionNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalDateTıme", field.SubmissionApprovalDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalSubmıtDateTıme", field.SubmissionApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalID", field.SubmissionApprovalID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalNotes", field.SubmissionApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SubmissionApprovalStatus", field.SubmissionApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RetryCount", field.RetryCount, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@ValidityEndDateTime", field.ValidityEndDateTime, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ValidityStatus", field.ValidityStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionDateTıme", field.RejectionDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionReasons", field.RejectionReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerID", field.RejectionWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerStatus", field.RejectionWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFCheckerSubmitDateTıme", field.RejectionWFCheckerSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@RejectionWFApproverID", field.RejectionWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalStatus", field.RejectionWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalNotes", field.RejectionWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@RejectionWFApprovalSubmitDateTıme", field.RejectionWFApprovalSubmitDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationDateTıme", field.CancellationDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationReasons", field.CancellationReasons, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerID", field.CancellationWFCheckerID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerStatus", field.CancellationWFCheckerStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFCheckerSubmıtDateTıme", field.CancellationWFCheckerSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@CancellationWFApproverID", field.CancellationWFApproverID, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalStatus", field.CancellationWFApprovalStatus, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalNotes", field.CancellationWFApprovalNotes, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CancellationWFApprovalSubmıtDateTıme", field.CancellationWFApprovalSubmıtDateTıme, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@ETLJobName", field.ETLJobName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcPricingCurrencyCode", field.CbcPricingCurrencyCode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcCurrencyExchangeRate", field.CbcCurrencyExchangeRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcFrequencyofBilling", field.CbcFrequencyofBilling, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodStartDate", field.CbcBillingPeriodStartDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@cbcBillingPeriodEndDate", field.CbcBillingPeriodEndDate, SqlDbType.DateTime),
            QueryHelper.CreateSqlParameter("@PaymentMode", field.PaymentMode, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcSupplierBankAccountNumber", field.CbcSupplierBankAccountNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcBillReferenceNumber", field.CbcBillReferenceNumber, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@SourceCalculationMode", field.SourceCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@EtlCalculationMode", field.EtlCalculationMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@İnvoiceFactorycalcutionMode", field.İnvoiceFactorycalcutionMode, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@cbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@cbcTaxCategory", field.CbcTaxCategory, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@validationlink", field.ValidationLink, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19ID", field.CustomsForm19ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm19DocumentType", field.CustomsForm19DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@Incoterms", field.Incoterms, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentType", field.FTADocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTAID", field.FTAID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@FTADocumentDesc", field.FTADocumentDesc, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@schemeAgencyName", field.SchemeAgencyName, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2ID", field.CustomsForm2ID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@CustomsForm2DocumentType", field.CustomsForm2DocumentType, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesID", field.OtherChargesID, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesChargeIndicator", field.OtherChargesChargeIndicator, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAmount", field.OtherChargesAmount, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OtherChargesAllowanceChargeReason", field.OtherChargesAllowanceChargeReason, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@NotificationTemplateId", field.NotificationTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@SMSTemplateId", field.SMSTemplateId, SqlDbType.Int),
            QueryHelper.CreateSqlParameter("@OutputFormat", field.OutputFormat, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceIRBMUniqueNo", field.OriginalInvoiceIRBMUniqueNo, SqlDbType.NVarChar),
            QueryHelper.CreateSqlParameter("@OriginalInvoiceNumber", field.OriginalInvoiceNumber, SqlDbType.NVarChar)
            };
            return parameters;
        }
        async Task<InvoiceLineItems> IETLService.InsertSBRefundNotelineData(InvoiceLineItems invoiceLineItems)
        {
            try
            {
                Log.Information("InsertSBRefundNotelineData service called.");
                Console.WriteLine("InsertSBRefundNotelineData service called.");
                // SQL Insert Query
                const string sql = @"
                    INSERT INTO [dbo].[SBRefundNoteLineItems] (
                        [SBRefundNoteId],
                        [CbcIDVATCategoryCode],
                        [CbcIDItemCountryOfOrigin],
                        [CbcDescription],
                        [CbcDescriptionCode],
                        [CbcBaseAmount],
                        [CbcAmount],
                        [CreatedBy],
                        [CreatedDate],
                        [UpdatedBy],
                        [UpdatedDate],
                        [LineId],
                        [CbcDiscountRate],
                        [CbcDiscountAmount],
                        [CbcTaxType],
                        [CbcTaxRate],
                        [CbcTaxAmount],
                        [CbcMeasure],
                        [CbcAllowanceType],
                        [CbcAllowanceReasonCode],
                        [CbcAllowanceText],
                        [CbcAllowanceBaseAmount],
                        [CbcAllowanceMultiplierFactor],
                        [CbcAllowanceAmount],
                        [CbcChargeType],
                        [CbcChargeReasonCode],
                        [CbcChargeText],
                        [CbcChargeBaseAmount],
                        [CbcChargeMultiplierFactor],
                        [CbcChargeAmount],
                        [CbcPrice],
                        [CbcTaxExemptionDetails],
                        [CbcTaxExemptedAmount],
                        [CbcTotalExcludingTax],
                        [CbcItemClassificationCode],
                        [CbcProductTariffClass],
                        [CbcTaxSchemeID],
                        [CbcTaxSchemeAgencyID],
                        [CbcTaxSchemeAgencyCode],
                        [CbcInvoiceLineNetAmount],
                        [CbcNetAmount],
                        [ProductId],
                        [CbcItemClassificationClass],
                        [CbcProductTariffCode],
                        [CbcSubtotal],
                        [CbcSSTTaxCategory],
                        [CbcBaseQuantity]
                    ) 
                    VALUES (
                        @SBRefundNoteId,
                        @CbcIDVATCategoryCode,
                        @CbcIDItemCountryOfOrigin,
                        @CbcDescription,
                        @CbcDescriptionCode,
                        @CbcBaseAmount,
                        @CbcAmount,
                        @CreatedBy,
                        @CreatedDate,
                        @UpdatedBy,
                        @UpdatedDate,
                        @LineId,
                        @CbcDiscountRate,
                        @CbcDiscountAmount,
                        @CbcTaxType,
                        @CbcTaxRate,
                        @CbcTaxAmount,
                        @CbcMeasure,
                        @CbcAllowanceType,
                        @CbcAllowanceReasonCode,
                        @CbcAllowanceText,
                        @CbcAllowanceBaseAmount,
                        @CbcAllowanceMultiplierFactor,
                        @CbcAllowanceAmount,
                        @CbcChargeType,
                        @CbcChargeReasonCode,
                        @CbcChargeText,
                        @CbcChargeBaseAmount,
                        @CbcChargeMultiplierFactor,
                        @CbcChargeAmount,
                        @CbcPrice,
                        @CbcTaxExemptionDetails,
                        @CbcTaxExemptedAmount,
                        @CbcTotalExcludingTax,
                        @CbcItemClassificationCode,
                        @CbcProductTariffClass,
                        @CbcTaxSchemeID,
                        @CbcTaxSchemeAgencyID,
                        @CbcTaxSchemeAgencyCode,
                        @CbcInvoiceLineNetAmount,
                        @CbcNetAmount,
                        @ProductId,
                        @CbcItemClassificationClass,
                        @CbcProductTariffCode,
                        @CbcSubtotal,
                        @CbcSSTTaxCategory,
                        @CbcBaseQuantity
                    ); 
                    SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted ID
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBRefundNoteLineItemDataTake(invoiceLineItems));
                invoiceLineItems.Id = int.Parse(id.ToString());
                Log.Information($"Line Item Inserted of {invoiceLineItems.InvoiceId} Invoicenumber");
                Console.WriteLine($"Line Item Inserted of {invoiceLineItems.InvoiceId} Invoicenumber");
                return invoiceLineItems;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBRefundNotelineData service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBRefundNotelineData service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBRefundNoteLineItemDataTake(InvoiceLineItems field)
        {
            var parameters = new List<IDataParameter>
                {
                    QueryHelper.CreateSqlParameter("@SBRefundNoteId", field.SBRefundNoteId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcIDVATCategoryCode", field.CbcIDVATCategoryCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcIDItemCountryOfOrigin", field.CbcIDItemCountryOfOrigin, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescription", field.CbcDescription, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcDescriptionCode", field.CbcDescriptionCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseAmount", field.CbcBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAmount", field.CbcAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedBy", field.CreatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CreatedDate", field.CreatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@UpdatedBy", field.UpdatedBy, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@UpdatedDate", field.UpdatedDate, SqlDbType.DateTime),
                    QueryHelper.CreateSqlParameter("@LineId", field.LineId, SqlDbType.Int),
                    QueryHelper.CreateSqlParameter("@CbcDiscountRate", field.CbcDiscountRate, SqlDbType.Decimal),
                    QueryHelper.CreateSqlParameter("@CbcDiscountAmount", field.CbcDiscountAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxType", field.CbcTaxType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxRate", field.CbcTaxRate, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxAmount", field.CbcTaxAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcMeasure", field.CbcMeasure, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceType", field.CbcAllowanceType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceReasonCode", field.CbcAllowanceReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceText", field.CbcAllowanceText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceBaseAmount", field.CbcAllowanceBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceMultiplierFactor", field.CbcAllowanceMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcAllowanceAmount", field.CbcAllowanceAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeType", field.CbcChargeType, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeReasonCode", field.CbcChargeReasonCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeText", field.CbcChargeText, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeBaseAmount", field.CbcChargeBaseAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeMultiplierFactor", field.CbcChargeMultiplierFactor, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcChargeAmount", field.CbcChargeAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcPrice", field.CbcPrice, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptionDetails", field.CbcTaxExemptionDetails, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxExemptedAmount", field.CbcTaxExemptedAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTotalExcludingTax", field.CbcTotalExcludingTax, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationCode", field.CbcItemClassificationCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffClass", field.CbcProductTariffClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeID", field.CbcTaxSchemeID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyID", field.CbcTaxSchemeAgencyID, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcInvoiceLineNetAmount", field.CbcInvoiceLineNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcNetAmount", field.CbcNetAmount, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@ProductId", field.ProductId, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcItemClassificationClass", field.CbcItemClassificationClass, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcProductTariffCode", field.CbcProductTariffCode, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSubtotal", field.CbcSubtotal, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcSSTTaxCategory", field.CbcSSTTaxCategory, SqlDbType.NVarChar),
                    QueryHelper.CreateSqlParameter("@CbcBaseQuantity", field.CbcBaseQuantity, SqlDbType.NVarChar)
                 };

            return parameters;
        }
        async Task<DocTaxSubTotal> IETLService.InsertSBRefundNoteTaxSubTotal(DocTaxSubTotal docTaxSubTotal)
        {
            try
            {
                Log.Information("InsertSBRefundNoteTaxSubTotal service called.");
                Console.WriteLine("InsertSBRefundNoteTaxSubTotal service called.");
                const string sql = @"
                        INSERT INTO [dbo].[SBRefundTaxSubTotal] (
                            [SBRefundNoteId],
                            [TaxAmount],
                            [CategoryTotalLines],
                            [CategoryTaxCategory],
                            [CategoryTaxableAmount],
                            [CategoryTaxAmount],
                            [CategoryTaxRate],
                            [CategoryTaxExemptionReason],
                            [SBRefundNoteLineItemId],
                            [CategoryTaxSchemeId],
                            [AmountExemptedFromTax],
                            [CbcTaxSchemeAgencyId],
                            [CbcTaxSchemeAgencyCode]
                        ) 
                        VALUES (
                            @SBRefundNoteId,
                            @TaxAmount,
                            @CategoryTotalLines,
                            @CategoryTaxCategory,
                            @CategoryTaxableAmount,
                            @CategoryTaxAmount,
                            @CategoryTaxRate,
                            @CategoryTaxExemptionReason,
                            @SBRefundNoteLineItemId,
                            @CategoryTaxSchemeId,
                            @AmountExemptedFromTax,
                            @CbcTaxSchemeAgencyId,
                            @CbcTaxSchemeAgencyCode
                        );
                        SELECT SCOPE_IDENTITY();";

                // Execute the query and get the inserted DocumentSubTotalId
                var id = await _queryHelper.ExecuteScalar(sql, InsertSBRefundNoteTaxSubTotalDataTake(docTaxSubTotal));
                docTaxSubTotal.DocumentSubTotalId = int.Parse(id.ToString());
                Log.Information($"SBRefundNoteDoctaxSubTotal Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                Console.WriteLine($"SBRefundNoteDocTaxSubTotal Inserted of {docTaxSubTotal.InvoiceId} Invoicenumber");
                return docTaxSubTotal;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertSBRefundNoteTaxSubTotal service. {ex.Message}");
                Console.WriteLine($"Exception in InsertSBRefundNoteTaxSubTotal service. {ex.Message}");
                throw;
            }
        }
        private List<IDataParameter> InsertSBRefundNoteTaxSubTotalDataTake(DocTaxSubTotal field)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@DocumentSubTotalId", field.DocumentSubTotalId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@SBRefundNoteId", field.SBRefundNoteId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@TaxAmount", field.TaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTotalLines", field.CategoryTotalLines, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxCategory", field.CategoryTaxCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxableAmount", field.CategoryTaxableAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxAmount", field.CategoryTaxAmount, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxRate", field.CategoryTaxRate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CategoryTaxExemptionReason", field.CategoryTaxExemptionReason, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SBRefundNoteLineItemId", field.SBRefundNoteLineItemId, SqlDbType.Int),
                QueryHelper.CreateSqlParameter("@CategoryTaxSchemeId", field.CategoryTaxSchemeId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@AmountExemptedFromTax", field.AmountExemptedFromTax, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyId", field.CbcTaxSchemeAgencyId, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CbcTaxSchemeAgencyCode", field.CbcTaxSchemeAgencyCode, SqlDbType.NVarChar)
            };
            return parameters;
        }
        #endregion SBRefundNoteData
        public async Task<List<InvoiceData>> GetInvoiceData(string einvoicenumber, string invoicetypecode)
        {
            try
            {
                Log.Information("GetInvoiceData Service Called.");
                Console.WriteLine("GetInvoiceData Service Called.");
                string sql = null;
                if (invoicetypecode.Length < 2)
                {
                    invoicetypecode= $"0{invoicetypecode}";
                }
                if (invoicetypecode == "01")
                {
                    sql = "select * from InvoiceData where eInvoiceNumber=@eInvoiceNumber";
                }
                else if (invoicetypecode == "02")
                {
                    sql = "select * from CreditNoteData where eInvoiceNumber=@eInvoiceNumber";
                }
                else if (invoicetypecode == "03")
                {
                    sql = "select * from DebitNoteData where eInvoiceNumber=@eInvoiceNumber";
                }
                else if (invoicetypecode == "04")
                {
                    sql = "select * from RefundNoteData where eInvoiceNumber=@eInvoiceNumber";
                }
                else if (invoicetypecode == "11")
                {
                    sql = "select * from SBInvoiceData where eInvoiceNumber=@eInvoiceNumber";
                }
                else if (invoicetypecode == "12")
                {
                    sql = "select * from SBCreditNoteData where eInvoiceNumber=@eInvoiceNumber";
                }
                else if (invoicetypecode == "13")
                {
                    sql = "select * from SBDebitNoteData where eInvoiceNumber=@eInvoiceNumber";
                }
                else if (invoicetypecode == "14")
                {
                    sql = "select * from SBRefundNoteData where eInvoiceNumber=@eInvoiceNumber";
                }
                else
                {
                    return null;
                }


                if (!string.IsNullOrEmpty(sql))
                {
                    sql = $"{sql} and status is not null and status != '' order by Id desc";
                }

                var parameters = new List<IDataParameter>
                {
                     QueryHelper.CreateSqlParameter("@eInvoiceNumber", einvoicenumber, SqlDbType.NVarChar)
                };
                var value = (await _queryHelper.Read(sql, parameters, InvoiceByIdMake)).ToList();
                return value;
            }

            catch (Exception ex)
            {
                Log.Error($"Exception in GetInvoiceData service.{ex.Message}");
                Console.WriteLine($"Exception in GetInvoiceData service.{ex.Message}");
                throw;
            }
        }
        #region ETLProcess
        public async Task<ETLProcess> InsertETLProcess(ETLProcess etlprocess)
        {
            try
            {
                Log.Information("InsertETLProcess service called.");
                Console.WriteLine("InsertETLProcess service called.");

                const string sql = @"
                        INSERT INTO [dbo].[ETLProcess] (
                            [ETLJobName],
                            [InvoiceNumber],
                            [InvoiceCode],
                            [FileName],
                            [FileDateTime],
                            [ETLProcessDatetime],
                            [InvoiceVersion],
                            [InvoiceTypeCode],
                            [InvoiceDate],
                            [BuyerName],
                            [BuyerCategory],
                            [BuyersTIN],
                            [BuyerAddressLine0],
                            [BuyerCityName],
                            [BuyersState],
                            [BuyerCountry],
                            [CustomerInvoicecode],
                            [InvoiceUUID],
                            [InvoiceDocumentReference],
                            [EInvoiceNumber],
                            [CurrencyCode],
                            [UnitPrice],
                            [Quantity],
                            [SubTotal],
                            [BuyerTelephone],
                            [ProductDescription],
                            [Buyeremail],
                            [BuyerBRNNumber],
                            [SupplierName],
                            [SupplierCategory],
                            [SuppliersTIN],
                            [SupplierAddressLine0],
                            [SupplierCityName], 
                            [SuppliersState],
                            [SupplierCountry],
                            [SupplierMSIC]
                        ) 
                        VALUES (
                            @ETLJobName,
                            @InvoiceNumber,
                            @InvoiceCode,
                            @FileName,
                            @FileDateTime,
                            @ETLProcessDatetime,
                            @InvoiceVersion,
                            @InvoiceTypeCode,
                            @InvoiceDate,
                            @BuyerName,
                            @BuyerCategory,
                            @BuyersTIN,
                            @BuyerAddressLine0,
                            @BuyerCityName,
                            @BuyersState,
                            @BuyerCountry,
                            @CustomerInvoicecode,
                            @InvoiceUUID,
                            @InvoiceDocumentReference,
                            @EInvoiceNumber,
                            @CurrencyCode,
                            @UnitPrice,
                            @Quantity,
                            @SubTotal,
                            @BuyerTelephone,
                            @ProductDescription,
                            @Buyeremail,
                            @BuyerBRNNumber,
                            @SupplierName,
                            @SupplierCategory,
                            @SuppliersTIN,
                            @SupplierAddressLine0,
                            @SupplierCityName,
                            @SuppliersState,
                            @SupplierCountry,
                            @SupplierMSIC
                        );
                        SELECT SCOPE_IDENTITY();";


                var id = await _queryHelper.ExecuteScalar(sql, InsertETLProcessTake(etlprocess));
                Log.Information($"ETLProcessdata inserted of {etlprocess.InvoiceNumber} Invoicenumber");
                Console.WriteLine($"ETLProcessdata inserted of {etlprocess.InvoiceNumber} Invoicenumber");
                return etlprocess;

            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertETLProcess service. {ex.Message}");
                throw;
            }

        }

        private List<IDataParameter> InsertETLProcessTake(ETLProcess etlprocess)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@ETLJobName", etlprocess.ETLJobName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceNumber", etlprocess.InvoiceNumber, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceCode", etlprocess.InvoiceCode, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@FileName", etlprocess.FileName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@FileDateTime", etlprocess.FileDateTime, SqlDbType.DateTime),
                QueryHelper.CreateSqlParameter("@ETLProcessDatetime", etlprocess.ETLProcessDatetime, SqlDbType.DateTime),
                QueryHelper.CreateSqlParameter("@InvoiceVersion", etlprocess.InvoiceVersion, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceTypeCode", etlprocess.InvoiceTypeCode, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceDate", etlprocess.InvoiceDate, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyerName", etlprocess.BuyerName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyerCategory", etlprocess.BuyerCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyersTIN", etlprocess.BuyersTIN, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyerAddressLine0", etlprocess.BuyerAddressLine0, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyerCityName", etlprocess.BuyerCityName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyersState", etlprocess.BuyersState, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyerCountry", etlprocess.BuyerCountry, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CustomerInvoicecode", etlprocess.CustomerInvoicecode, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceUUID", etlprocess.InvoiceUUID, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceDocumentReference", etlprocess.InvoiceDocumentReference, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@EInvoiceNumber", etlprocess.EInvoiceNumber, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@CurrencyCode", etlprocess.CurrencyCode, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@UnitPrice", etlprocess.UnitPrice, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@Quantity", etlprocess.Quantity, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SubTotal", etlprocess.SubTotal, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyerTelephone", etlprocess.BuyerTelephone, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@ProductDescription", etlprocess.ProductDescription, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@Buyeremail", etlprocess.Buyeremail, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@BuyerBRNNumber", etlprocess.BuyerBRNNumber, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SupplierName", etlprocess.SupplierName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SupplierCategory", etlprocess.SupplierCategory, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SuppliersTIN", etlprocess.SuppliersTIN, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SupplierAddressLine0", etlprocess.SupplierAddressLine0, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SupplierCityName", etlprocess.SupplierCityName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SuppliersState", etlprocess.SuppliersState, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SupplierCountry", etlprocess.SupplierCountry, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@SupplierMSIC", etlprocess.SupplierMSIC, SqlDbType.NVarChar),

            };
            return parameters;
        }
        #endregion ETLProcess
        #region ETLStatus
        public async Task<ETLStatus> InsertETLStatus(ETLStatus etlstatus)
        {
            try
            {
                Log.Information("InsertETLStatus service called.");
                Console.WriteLine("InsertETLStatus service called.");

                const string sql = @"
                        INSERT INTO [dbo].[ETLStatus] (
                            [ETLJobName],
                            [InvoiceNumber],
                            [InvoiceCode],
                            [FileName],
                            [FileDateTime],
                            [ETLProcessDatetime],
                            [Status]
                        ) 
                        VALUES (
                            @ETLJobName,
                            @InvoiceNumber,
                            @InvoiceCode,
                            @FileName,
                            @FileDateTime,
                            @ETLProcessDatetime,
                            @Status
                        );
                        SELECT SCOPE_IDENTITY();";


                var id = await _queryHelper.ExecuteScalar(sql, InsertETLStatusTake(etlstatus));
                Log.Information($"ETLStatusdata inserted of {etlstatus.InvoiceNumber} Invoicenumber");
                Console.WriteLine($"ETLStatusdata inserted of {etlstatus.InvoiceNumber} Invoicenumber");
                return etlstatus;

            }
            catch (Exception ex)
            {
                Log.Error($"Exception in InsertETLProcess service. {ex.Message}");
                throw;
            }

        }

        private List<IDataParameter> InsertETLStatusTake(ETLStatus etlstatus)
        {
            var parameters = new List<IDataParameter>
            {
                QueryHelper.CreateSqlParameter("@ETLJobName ", etlstatus.ETLJobName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceNumber ", etlstatus.InvoiceNumber, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@InvoiceCode ", etlstatus.InvoiceCode, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@FileName ", etlstatus.FileName, SqlDbType.NVarChar),
                QueryHelper.CreateSqlParameter("@FileDateTime ", etlstatus.FileDateTime, SqlDbType.DateTime),
                QueryHelper.CreateSqlParameter("@ETLProcessDatetime ", etlstatus.ETLProcessDatetime, SqlDbType.DateTime),
                QueryHelper.CreateSqlParameter("@Status ", etlstatus.Status, SqlDbType.NVarChar),
            };
            return parameters;
        }
        #endregion ETLStatus
        public async Task<int> ExecStorProcForInsert(List<InvoiceData> invoicedata,List<List<InvoiceLineItems>> invoicelineitemsjson, List<DocTaxSubTotal> doctaxsubtotaljson)
        {
            var invoicelineitemsJsonString = JsonConvert.SerializeObject(invoicelineitemsjson);
            var invoicedatajsonstring = JsonConvert.SerializeObject(invoicedata);
            var lineitemjsonstring = JsonConvert.SerializeObject(invoicelineitemsJsonString);
            var doctaxjsonstring = JsonConvert.SerializeObject(doctaxsubtotaljson);
            var paramName1 = "@invoicedata";
            var paramName2 = "@invoicelineitems";
            var paramName3 = "@doctaxsubtotal";
            var parameters1 = new List<IDataParameter>
                              {
                                QueryHelper.CreateSqlParameter(paramName1, invoicedatajsonstring, SqlDbType.NVarChar),
                                QueryHelper.CreateSqlParameter(paramName2, invoicelineitemsJsonString, SqlDbType.NVarChar),
                                QueryHelper.CreateSqlParameter(paramName3, doctaxjsonstring, SqlDbType.NVarChar),
                               };
            var exec=await _queryHelper.ExecuteStoredProc("Staging_Insert", parameters1);
            return exec;
          
        }

        public async Task<int> ExecStoreProc(List<InvoiceData> invoicedata, List<List<InvoiceLineItems>> invoicelineitemsjson, List<DocTaxSubTotal> doctaxsubtotaljson, List<string> filepath)
        {
            var invoicelineitemsJsonString = JsonConvert.SerializeObject(invoicelineitemsjson);
            var paramName1 = "@invoicedata";
            var paramName2 = "@invoicelineitems";
            var paramName3 = "@doctaxsubtotal";
            var parameters1 = new List<IDataParameter>
                              {
                                QueryHelper.CreateSqlParameter(paramName1, invoicedata, SqlDbType.NVarChar),
                                QueryHelper.CreateSqlParameter(paramName2, invoicelineitemsJsonString, SqlDbType.NVarChar),
                                QueryHelper.CreateSqlParameter(paramName3, doctaxsubtotaljson, SqlDbType.NVarChar),
                               };
            var exec = await _queryHelper.ExecuteStoredProc("Validation", parameters1);
            return exec;    
        } 
        public async Task<bool> UpdateInvoiceDataStatus(string Status, int Id, string InvoiceCode)
        {
            try
            {
                Log.Information("UpdateInvoiceDataStatus Service Called.");
                Console.WriteLine("UpdateInvoiceDataStatus Service Called.");
                Log.Information("========================================================");
                Console.WriteLine("========================================================");
                string sql = null;
                if (InvoiceCode == "01")
                {
                    sql = "update InvoiceData set Status=@status where Id =@Id";
                }
                else if (InvoiceCode == "02")
                {
                    sql = "update CreditNoteData set Status=@status where Id=@Id"; ;
                }
                else if (InvoiceCode == "03")
                {
                    sql = "update DebitNoteData set Status=@status where Id=@Id;";
                }
                else if (InvoiceCode == "04")
                {
                    sql = "update RefundNoteData set Status=@status where Id=@Id";
                }
                else if (InvoiceCode == "11")
                {
                    sql = "update SBInvoiceData set Status=@status where Id=@Id";
                }
                else if (InvoiceCode == "12")
                {
                    sql = "update SBCreditNoteData set Status=@status where Id=@Id";
                }
                else if (InvoiceCode == "13")
                {
                    sql = "update SBDebitNoteData set Status=@status where Id=@Id";
                }
                else if (InvoiceCode == "14")
                {
                    sql = "update SBRefundNoteData set Status=@status where Id=@Id";
                }
                else
                {
                    return false;
                }
                var parameters = new List<IDataParameter>
                {
                     QueryHelper.CreateSqlParameter("@status", Status, SqlDbType.NVarChar),
                     QueryHelper.CreateSqlParameter("@Id", Id, SqlDbType.NVarChar),

                };
                var value = (await _queryHelper.ExecuteScalar(sql, parameters));
                return true;
            }
            catch (Exception ex)
            {
                Log.Error($"Exception in UpdateInvoiceData service.{ex.Message}");
                Console.WriteLine($"Exception in UpdateInvoiceData service.{ex.Message}");
                Log.Information("========================================================");
                Console.WriteLine("========================================================");
                return false;
            }
        }
        public async Task<TenantDetails>GetConnectionString(string domain)
            {
            string sql = $"select * from IHQIDFMaster.dbo.tenantdetails where domain = @domain";
            var parameters = new List<IDataParameter>
        {
            QueryHelper.CreateSqlParameter("@domain", domain, SqlDbType.NVarChar)
        };

            var value = (await _queryHelper.Read(sql, parameters, ConnectionStringMake)).FirstOrDefault();
            if (value != null)
            {
                // Cache the connection string
                ConnectionStringManager.SetConnectionString(value.ConnectionString);

                var initialConnectionString = ConnectionStringManager.IsConnectionStringCached()
                                    ? ConnectionStringManager.GetConnectionString() 
                                    : null;
                _queryHelper = new QueryHelper(initialConnectionString);
                // return connection string
                return value;
            }
            else
            {
                // return connection string
                return value;
            }
        }
        public static class ConnectionStringManager
        {
            private static string _cachedConnectionString;

            public static string GetConnectionString()
            {
                return _cachedConnectionString;
            }
            public static void SetConnectionString(string connectionString)
            {
                var encPassword = connectionString.Split(';')[3].Substring(10);
                var password = SecurityHelper.DecryptWithEmbedKey(encPassword);
                connectionString = connectionString.Replace(encPassword, password);
                _cachedConnectionString = connectionString;
            }
            public static bool IsConnectionStringCached()
            {
                return !string.IsNullOrEmpty(_cachedConnectionString);
            }
        }


        public async Task SetConnectionString(string connectionstring)
        {
            var encPassword = connectionstring.Split(';')[3].Substring(10);
            var password = SecurityHelper.DecryptWithEmbedKey(encPassword);
            connectionstring = connectionstring.Replace(encPassword, password);

            //// Cache the connection string
            //ConnectionStringManager.SetConnectionString(connectionString);

            // Update QueryHelper with the new connection string
            _queryHelper = new QueryHelper(connectionstring);
        }

        public Task<int> ValidateETL(List<InvoiceData> invoicedatajson, List<List<InvoiceLineItems>> invoicelineitemsjson)
        {
            throw new NotImplementedException();
        }

        public Task<int> InsertStoreProc(List<InvoiceData> invoicedata, List<string> filepath)
        {
            throw new NotImplementedException();
        }

        public async Task<int> TempInsertStoreProc(List<InvoiceData> invoicedata, string documentType, object invfields, object invlinefields, string invoicetypecode)
        {
            {
                try
                {
                    int totalCount = 0; // Initialize the total counter
                    int chunkSize = 1000; // Adjust the chunk size as needed

                    // Define a retry policy
                    var retryPolicy = Policy
                        .Handle<SqlException>() // Retry on database connection issues
                        .WaitAndRetryAsync(3, retryAttempt =>
                            TimeSpan.FromSeconds(Math.Pow(2, retryAttempt)), // Exponential backoff
                            (exception, timeSpan, retryCount, context) =>
                            {
                                Console.WriteLine($"Retry {retryCount} after {timeSpan.TotalSeconds} sec due to: {exception.Message}");
                            });

                    // Process each invoice in the list
                    foreach (var invoice in invoicedata)
                    {
                        int invoiceCount = 0; // Counter for the current invoice

                        // Split the InvoiceLineItems into smaller chunks
                        var lineItemsChunks = invoice.InvoiceLineItems
                            .Select((x, i) => new { Index = i, Value = x })
                            .GroupBy(x => x.Index / chunkSize)
                            .Select(x => x.Select(v => v.Value).ToList())
                            .ToList();

                        // Process each chunk of InvoiceLineItems for the current invoice
                        foreach (var chunk in lineItemsChunks)
                        {
                            // Temporarily replace the InvoiceLineItems with the current chunk
                            var originalLineItems = invoice.InvoiceLineItems; // Save the original list
                            invoice.InvoiceLineItems = chunk; // Assign the current chunk

                            // Serialize the modified invoice data to JSON
                            var invoicedatajson = JsonConvert.SerializeObject(new List<InvoiceData> { invoice });
                            var invfieldsJson = JsonConvert.SerializeObject(invfields);
                            var invlinefieldsJson = JsonConvert.SerializeObject(invlinefields);

                            // Create the parameter for the stored procedure
                            var paramName1 = "@invoicedata";
                            var paramName2 = "@invfield";
                            var paramName3 = "@invlinfield";
                            var parameters1 = new List<IDataParameter>
                    {
                        QueryHelper.CreateSqlParameter(paramName1, invoicedatajson, SqlDbType.NVarChar),
                        QueryHelper.CreateSqlParameter(paramName2, invfieldsJson, SqlDbType.NVarChar),
                        QueryHelper.CreateSqlParameter(paramName3, invlinefieldsJson, SqlDbType.NVarChar),
                    };


                            // Execute the stored procedure for the current chunk
                            var exec = await _queryHelper.ExecuteStoredProc($"{documentType}_insert_temp_invoices", parameters1);
                            invoiceCount += exec; // Increment the count for the current invoice
                            totalCount += exec; // Increment the total count

                            // Restore the original InvoiceLineItems for the next iteration
                            invoice.InvoiceLineItems = originalLineItems;
                        }

                        Console.WriteLine("Finished processing Invoice");
                    }

                    Console.WriteLine("All invoices processed");
                    return totalCount;
                }
                catch (Exception ex)
                {
                    Log.Warning($"Exception In TempInsertStoreProc: {ex.Message}");
                    Console.WriteLine($"Exception In TempInsertStoreProc: {ex.Message}");
                    throw ex;
                }
            }
        }

        public Task<int> InsertInvData(string InvoiceNumber, List<string> filepath, string documentType, string invoicetypecode)
        {
            throw new NotImplementedException();
        }

        public Task<int> TempInsertStoreProc2(string InvoiceNumber, string TotalAmount, string TotalLines, string documentType, string invoicetypecode)
        {
            throw new NotImplementedException();
        }

        public Task<int> InsertInvoiceData(string InvoiceNumber, string TotalAmount, string TotalLines, List<string> filepath, string documentType, string invoicetypecode)
        {
            // Define a retry policy
            var retryPolicy = Policy
                .Handle<SqlException>() // Retry on database connection issues
                .WaitAndRetryAsync(3, retryAttempt =>
                    TimeSpan.FromSeconds(Math.Pow(2, retryAttempt)), // Exponential backoff
                    (exception, timeSpan, retryCount, context) =>
                    {
                        Console.WriteLine($"Retry {retryCount} after {timeSpan.TotalSeconds} sec due to: {exception.Message}");
                    });

            var filepathjson = JsonConvert.SerializeObject(filepath);
            var paramName1 = "p_invoice_number";
            var paramName2 = "p_totalamount";
            var paramName3 = "p_totallineitems";
            var paramName4 = "filepath";
            var parameters1 = new List<IDataParameter>
                              {
                               QueryHelper.CreateSqlParameter(paramName1, InvoiceNumber, SqlDbType.Text),
                               QueryHelper.CreateSqlParameter(paramName2, TotalAmount, SqlDbType.Text),
                               QueryHelper.CreateSqlParameter(paramName3, TotalLines, SqlDbType.Text),
                                QueryHelper.CreateSqlParameter(paramName4, filepathjson, SqlDbType.NVarChar)
                               };
            var exec = _queryHelper.ExecuteStoredProc($"{documentType}_insert_{invoicetypecode}data", parameters1);
            return exec;
        }

        public async Task<List<CsvFieldConfiguration>> GetInvoiceMappingColumns(string documentType)
        {
            string sql = $"SELECT * FROM InvoiceCsvFieldConfiguration WHERE Status = 'Active' AND SourceName = '{documentType}' ORDER BY Sequence";

            try
            {
                var data = (await _queryHelper.Read(sql, null, MappingColumnsList))?.ToList();

                return data;
            }
            catch (Exception ex)
            {
                throw ex;
            }


        }

        private readonly Func<IDataReader, InvoiceData> InvoiceByIdMake = reader =>
        new InvoiceData
        {
            EInvoiceNumber = reader["eInvoiceNumber"].ToString(),
            Status = reader["Status"].ToString(),
        };
        private readonly Func<IDataReader, TenantDetails> ConnectionStringMake = reader =>
        new TenantDetails
        {
            ConnectionString = reader["ConnectionString"].ToString(),
        };
        private readonly Func<IDataReader, CsvFieldConfiguration> MappingColumnsList = reader =>
        new CsvFieldConfiguration
        {
            CsvFieldName = reader["CsvFieldName"].ToString(),
            TableFieldName = reader["TableFieldName"].ToString(),
            Status = reader["Status"].ToString(),
            TableName = reader["TableName"].ToString(),
        };
    }
}


